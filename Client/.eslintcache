[{"C:\\MSWDSDP\\Client\\src\\index.js":"1","C:\\MSWDSDP\\Client\\src\\App.js":"2","C:\\MSWDSDP\\Client\\src\\About.js":"3","C:\\MSWDSDP\\Client\\src\\Home.js":"4","C:\\MSWDSDP\\Client\\src\\Newtosite.js":"5","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\Logininf.js":"6","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\Infhome.js":"7","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\InfEditProfile.js":"8","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\consignments.js":"9","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\resetInf.js":"10","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\SignUpInf.js":"11","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\newPasswordInf.js":"12","C:\\MSWDSDP\\Client\\src\\Components\\shops\\SignUpShop.js":"13","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\CurrentConsignments.js":"14","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\InfProfilelook.js":"15","C:\\MSWDSDP\\Client\\src\\Components\\shops\\Login.js":"16","C:\\MSWDSDP\\Client\\src\\Components\\shops\\resetShop.js":"17","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\ShopDetail.js":"18","C:\\MSWDSDP\\Client\\src\\Components\\shops\\Shophome.js":"19","C:\\MSWDSDP\\Client\\src\\Components\\shops\\InfDetail.js":"20","C:\\MSWDSDP\\Client\\src\\Components\\shops\\newPasswordShop.js":"21","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\ConsignmentHistory.js":"22","C:\\MSWDSDP\\Client\\src\\Components\\shops\\ShopCurrentConsignments.js":"23","C:\\MSWDSDP\\Client\\src\\Components\\shops\\ShopPendingRequests.js":"24","C:\\MSWDSDP\\Client\\src\\Components\\shops\\payRazorpay.js":"25","C:\\MSWDSDP\\Client\\src\\Components\\admin\\admin.js":"26","C:\\MSWDSDP\\Client\\src\\Components\\shops\\shopconsignments.js":"27","C:\\MSWDSDP\\Client\\src\\Components\\shops\\ConsignmentHistory.js":"28","C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\SiteManager.js":"29","C:\\MSWDSDP\\Client\\src\\Components\\admin\\addManager.js":"30","C:\\MSWDSDP\\Client\\src\\Components\\admin\\deleteManager.js":"31","C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\newPasswordManager.js":"32","C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\managersignin.js":"33","C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\resetManager.js":"34","C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\Transaction.js":"35","C:\\MSWDSDP\\Client\\src\\Components\\NavbarPage.js":"36","C:\\MSWDSDP\\Client\\src\\Components\\FooterPage.js":"37","C:\\MSWDSDP\\Client\\src\\Components\\CarouselPage.js":"38","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\Loginpageinf.js":"39","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\InfluencerNavbar.js":"40","C:\\MSWDSDP\\Client\\src\\Components\\shops\\SignUpFormPageShop.js":"41","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\SignUpFormPageInf.js":"42","C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\SiteManagerNavbar.js":"43","C:\\MSWDSDP\\Client\\src\\Components\\admin\\AdminNavbar.js":"44","C:\\MSWDSDP\\Client\\src\\Components\\shops\\ShopNavbar.js":"45","C:\\MSWDSDP\\Client\\src\\Components\\shops\\LoginFormPage.js":"46","C:\\MSWDSDP\\Client\\src\\Components\\shops\\NSearch.js":"47"},{"size":393,"mtime":1709955899988,"results":"48","hashOfConfig":"49"},{"size":4578,"mtime":1709975444305,"results":"50","hashOfConfig":"49"},{"size":7395,"mtime":1709974793448,"results":"51","hashOfConfig":"49"},{"size":677,"mtime":1709955899701,"results":"52","hashOfConfig":"49"},{"size":24658,"mtime":1709974621586,"results":"53","hashOfConfig":"49"},{"size":303,"mtime":1709955902209,"results":"54","hashOfConfig":"49"},{"size":2814,"mtime":1709955901940,"results":"55","hashOfConfig":"49"},{"size":11184,"mtime":1709955901649,"results":"56","hashOfConfig":"49"},{"size":3921,"mtime":1709955902931,"results":"57","hashOfConfig":"49"},{"size":2787,"mtime":1709955903216,"results":"58","hashOfConfig":"49"},{"size":318,"mtime":1709955902786,"results":"59","hashOfConfig":"49"},{"size":2629,"mtime":1709955903076,"results":"60","hashOfConfig":"49"},{"size":323,"mtime":1709955904814,"results":"61","hashOfConfig":"49"},{"size":2989,"mtime":1709955901376,"results":"62","hashOfConfig":"49"},{"size":4439,"mtime":1709955901796,"results":"63","hashOfConfig":"49"},{"size":298,"mtime":1709955903666,"results":"64","hashOfConfig":"49"},{"size":2826,"mtime":1709955905239,"results":"65","hashOfConfig":"49"},{"size":7182,"mtime":1709955902506,"results":"66","hashOfConfig":"49"},{"size":339,"mtime":1709955904516,"results":"67","hashOfConfig":"49"},{"size":8877,"mtime":1709955903528,"results":"68","hashOfConfig":"49"},{"size":2633,"mtime":1709955904946,"results":"69","hashOfConfig":"49"},{"size":2972,"mtime":1709955901216,"results":"70","hashOfConfig":"49"},{"size":9445,"mtime":1709955904106,"results":"71","hashOfConfig":"49"},{"size":4425,"mtime":1709955904376,"results":"72","hashOfConfig":"49"},{"size":4535,"mtime":1709955905096,"results":"73","hashOfConfig":"49"},{"size":2598,"mtime":1709955900901,"results":"74","hashOfConfig":"49"},{"size":5270,"mtime":1709955905516,"results":"75","hashOfConfig":"49"},{"size":3540,"mtime":1709955903376,"results":"76","hashOfConfig":"49"},{"size":9171,"mtime":1709955905816,"results":"77","hashOfConfig":"49"},{"size":4673,"mtime":1709955900756,"results":"78","hashOfConfig":"49"},{"size":2828,"mtime":1709955901061,"results":"79","hashOfConfig":"49"},{"size":2672,"mtime":1709955906406,"results":"80","hashOfConfig":"49"},{"size":4331,"mtime":1709955906257,"results":"81","hashOfConfig":"49"},{"size":2832,"mtime":1709955906546,"results":"82","hashOfConfig":"49"},{"size":8108,"mtime":1709955906110,"results":"83","hashOfConfig":"49"},{"size":2551,"mtime":1709980032435,"results":"84","hashOfConfig":"49"},{"size":573,"mtime":1709957909563,"results":"85","hashOfConfig":"49"},{"size":5934,"mtime":1709981669390,"results":"86","hashOfConfig":"49"},{"size":3943,"mtime":1709955902356,"results":"87","hashOfConfig":"49"},{"size":2040,"mtime":1709955902077,"results":"88","hashOfConfig":"49"},{"size":8645,"mtime":1709955904676,"results":"89","hashOfConfig":"49"},{"size":14530,"mtime":1709955902656,"results":"90","hashOfConfig":"49"},{"size":1503,"mtime":1709955905961,"results":"91","hashOfConfig":"49"},{"size":1602,"mtime":1709955900606,"results":"92","hashOfConfig":"49"},{"size":2152,"mtime":1709955904242,"results":"93","hashOfConfig":"49"},{"size":3937,"mtime":1709973377836,"results":"94","hashOfConfig":"49"},{"size":13347,"mtime":1709955903960,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"1mpleda",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"98"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"98"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"98"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"98"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"98"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"98"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"98"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"98"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"98"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"98"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"98"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"98"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"98"},"C:\\MSWDSDP\\Client\\src\\index.js",[],["213","214"],"C:\\MSWDSDP\\Client\\src\\App.js",[],"C:\\MSWDSDP\\Client\\src\\About.js",["215","216","217"],"C:\\MSWDSDP\\Client\\src\\Home.js",["218","219"],"import React  from 'react';\nimport NavbarPage from './Components/NavbarPage';\nimport CarouselPage from './Components/CarouselPage';\nimport FooterPage from './Components/FooterPage'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport \"./About.css\";\nconst Home = () => {\n    const history = useHistory()\n    const location = useLocation();\n    window.history.pushState(null, \"\", window.location.href);\n    window.onpopstate = function () {\n        window.history.pushState(null, \"\", window.location.href);\n    };\n\n\n    return (\n        <>\n\n            <NavbarPage />\n            <CarouselPage />\n            <FooterPage />\n\n        </>\n    )\n}\n\nexport default Home;","C:\\MSWDSDP\\Client\\src\\Newtosite.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\influencers\\Logininf.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\influencers\\Infhome.js",["220","221"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { MDBBtn } from \"mdbreact\";\nimport InfluencerNavbar from \"./InfluencerNavbar\";\n\nconst Infhome = () => {\n  const history = useHistory();\n  const [isempty, setIsempty] = useState(false);\n  const [shops, setShops] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\",\n      shopName: \"\",\n      address: \"\",\n    },\n  ]);\n  useEffect(() => {\n    fetch(\"/api/allrequest\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signininf\");\n        }\n      })\n      .then((jsonRes) => {\n        if (jsonRes.length == 0) {\n          setIsempty(true);\n        }\n        setShops(jsonRes);\n      });\n  }, []);\n\n  return (\n    <>\n      <InfluencerNavbar />\n\n      {isempty ? (\n        <>\n          <center>\n            <div className=\"fatext justify-content-center col-lg-7 text-center  md-3 mt-3\">\n              No pending requests from any Brand.\n            </div>\n          </center>\n        </>\n      ) : (\n        <>\n\n      <div className=\"row mt-4\">\n        {shops.map((shop, index) => (\n          <div className=\"col-sm-6\" key={index}>\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Shop Owner Name : {shop.name}</h5>\n                <h5 className=\"card-title\">Shop Name : {shop.shopName}</h5>\n                <h5 className=\"card-title\">Shop Address : {shop.address}</h5>\n                <MDBBtn\n                  color=\"unique\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    fetch(\"/api/shop\", {\n                      method: \"post\",\n                      headers: {\n                        \"Content-Type\": \"application/json\",\n                      },\n                      body: JSON.stringify({ email: shop.email }),\n                    })\n                      .then((res) => res.json())\n                      .then((data) => {\n                        if (data.error) {\n                          alert(data.error);\n                        } else {\n                          history.push({\n                            pathname: \"/shopDetail\",\n                            state: { data },\n                          });\n                        }\n                      });\n                  }}\n                >\n                  View More\n                </MDBBtn>\n              </div>\n            </div>\n          </div>\n          // </div>\n        ))}\n      </div>\n      </>\n      )}\n\n    </>\n  );\n};\n\nexport default Infhome;\n","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\InfEditProfile.js",["222"],"import React, { useEffect, useState } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n} from \"mdbreact\";\nimport { useHistory } from \"react-router-dom\";\nimport InfluencerNavbar from \"./InfluencerNavbar\";\nimport \"./InfEditProfile.css\";\nimport { toast } from \"react-toastify\";\n\nconst InfEditProfile = () => {\n  const history = useHistory();\n  const [influencers, setInfluencers] = useState([\n    {\n      email: \"\",\n      phone: \"\",\n      age: \"\",\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      instagram: \"\",\n      instagramURL: \"\",\n      instagramFollowers: \"\",\n      instagramEngagementRate: \"\",\n      facebook: \"\",\n      facebookURL: \"\",\n      facebookFollowers: \"\",\n      facebookEngagementRate: \"\",\n      twitter: \"\",\n      twitterURL: \"\",\n      twitterFollowers: \"\",\n      twitterEngagementRate: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    fetch(\"/api/editinfluencer\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signininf\");\n        }\n      })\n      .then((jsonRes) => {\n        setInfluencers(jsonRes[0]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const postdata = (e) => {\n    e.preventDefault();\n\n    fetch(\"/api/Editchange\", {\n      method: \"put\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify(influencers),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        toast.success(\"Profile updated successfully.\")\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      <InfluencerNavbar />\n      <div id=\"page-content-wrapper\">\n        <MDBContainer className=\"my-5\">\n          <MDBRow>\n            <MDBCol />\n            <MDBCol md=\"8\">\n              <MDBCard>\n                <MDBCardBody>\n                  <form onSubmit={postdata}>\n                    <p className=\"h4 text-center py-4\">Edit Profile</p>\n                    <div className=\"grey-text\">\n                      <MDBRow>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your email\"\n                            icon=\"envelope\"\n                            group\n                            type=\"email\"\n                            validate\n                            error=\"wrong\"\n                            success=\"right\"\n                            required\n                            name=\"email\"\n                            value={influencers.email}\n                            onChange={(e) =>\n                              setInfluencers({ email: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your Phone Number\"\n                            icon=\"phone-alt\"\n                            group\n                            type=\"tel\"\n                            validate\n                            required\n                            name=\"phone\"\n                            value={influencers.phone}\n                            onChange={(e) =>\n                              setInfluencers({ phone: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                      </MDBRow>\n                      <MDBRow>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your Age\"\n                            icon=\"calendar-plus\"\n                            group\n                            type=\"number\"\n                            validate\n                            required\n                            name=\"age\"\n                            value={influencers.age}\n                            onChange={(e) =>\n                              setInfluencers({ age: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your City\"\n                            icon=\"city\"\n                            group\n                            type=\"text\"\n                            validate\n                            required\n                            name=\"city\"\n                            value={influencers.city}\n                            onChange={(e) =>\n                              setInfluencers({ city: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                      </MDBRow>\n                      <MDBRow>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your State\"\n                            icon=\"warehouse\"\n                            group\n                            type=\"text\"\n                            validate\n                            required\n                            name=\"state\"\n                            value={influencers.state}\n                            onChange={(e) =>\n                              setInfluencers({ state: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your Country\"\n                            icon=\"flag\"\n                            group\n                            type=\"text\"\n                            validate\n                            required\n                            name=\"country\"\n                            value={influencers.country}\n                            onChange={(e) =>\n                              setInfluencers({ country: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                      </MDBRow>\n                      <MDBRow></MDBRow>\n                      <MDBRow>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your Instagram Handle\"\n                            icon=\"user-edit\"\n                            group\n                            type=\"text\"\n                            validate\n                            required\n                            name=\"instagram\"\n                            value={influencers.instagram}\n                            onChange={(e) =>\n                              setInfluencers({ instagram: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your Instagram URL\"\n                            icon=\"link\"\n                            group\n                            type=\"url\"\n                            validate\n                            required\n                            name=\"instagramURL\"\n                            value={influencers.instagramURL}\n                            onChange={(e) =>\n                              setInfluencers({ instagramURL: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                      </MDBRow>\n\n                      <MDBRow>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your FaceBook Handle\"\n                            icon=\"user-edit\"\n                            group\n                            type=\"text\"\n                            validate\n                            required\n                            name=\"facebook\"\n                            value={influencers.facebook}\n                            onChange={(e) =>\n                              setInfluencers({ facebook: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your FaceBook URL\"\n                            icon=\"link\"\n                            group\n                            type=\"url\"\n                            validate\n                            required\n                            name=\"facebookURL\"\n                            value={influencers.facebookURL}\n                            onChange={(e) =>\n                              setInfluencers({ facebookURL: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                      </MDBRow>\n\n                      <MDBRow>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your Twitter Handle\"\n                            icon=\"user-edit\"\n                            group\n                            type=\"text\"\n                            validate\n                            name=\"twitter\"\n                            value={influencers.twitter}\n                            onChange={(e) =>\n                              setInfluencers({ twitter: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                        <MDBCol md=\"6\" className=\"md-3\">\n                          <MDBInput\n                            label=\"Your Twitter URL\"\n                            icon=\"link\"\n                            group\n                            type=\"url\"\n                            validate\n                            name=\"twitterURL\"\n                            value={influencers.twitterURL}\n                            onChange={(e) =>\n                              setInfluencers({ twitterURL: e.target.value })\n                            }\n                          />\n                        </MDBCol>\n                      </MDBRow>\n                    </div>\n                    <div className=\"text-center py-4 mt-3\">\n                      <MDBBtn color=\"cyan\" type=\"submit\">\n                        Upadate Details\n                      </MDBBtn>\n                    </div>\n                  </form>\n                  <div\n                    className=\"msg\"\n                    id=\"msg\"\n                    style={{\n                      textAlign: \"center\",\n                      flexDirection: \"column\",\n                      flex: \"auto\",\n                    }}\n                  ></div>\n                </MDBCardBody>\n              </MDBCard>\n            </MDBCol>\n            <MDBCol />\n          </MDBRow>\n        </MDBContainer>\n      </div>\n    </>\n  );\n};\n\nexport default InfEditProfile;\n","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\consignments.js",["223","224","225"],"import React, { useState, useEffect } from \"react\";\nimport InfluencerNavbar from \"./InfluencerNavbar\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Consignments() {\n  const history = useHistory();\n  const [isempty, setIsempty] = useState(false);\n  const [shops, setShops] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      shopName: \"\",\n      address: \"\",\n      photo1: \"\",\n      photo2: \"\",\n    },\n  ]);\n  const [amount, setAmount] = useState([]);\n  useEffect((req, res) => {\n    fetch(\"/api/infconsignment\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signininf\");\n        }\n      })\n      .then((foundcons) => {\n        if (foundcons[0].length == 0) {\n          setIsempty(true);\n        }\n        setShops(foundcons[0]);\n        setAmount(foundcons[1]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <>\n      <InfluencerNavbar />\n\n      {isempty ? (\n        <>\n          <center>\n            <div className=\"fatext justify-content-center col-lg-7 text-center  md-3 mt-3\">\n              There is no ongoing deals currently.\n            </div>\n          </center>\n        </>\n      ) : (\n        <>\n\n      <div className=\"container my-5\">\n        <div className=\"row\">\n          {shops.map((shop, index) => (\n            <div className=\"col-12 mt-3\" key={index}>\n              <div className=\"card col-sm-12\">\n                <div\n                  className=\"card-horizontal col-sm-12\"\n                  style={{ display: \"flex\", flex: \"1 1 auto\" }}\n                >\n                  <div className=\"img-square-wrapper\">\n                    <img\n                      className=\"img\"\n                      src={shop.photo1}\n                      style={{ height: \"35vh\", width: \"20rem\" }}\n                      alt=\"Card image cap\"\n                    />\n                  </div>\n                  <div className=\"card-body col-sm-12\">\n                    <h4 className=\"card-title\">{shop.shopName}</h4>\n                    <h6>Owner Name: {shop.name}</h6>\n                    <h6>Address: {shop.address}</h6>\n                    <h6>Email: {shop.email}</h6>\n                    <h6>Contact No.: {shop.phone}</h6>\n                    <h6>Amount : {amount[index]}</h6>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-danger\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        fetch(\"/api/infRemoveRequest\", {\n                          method: \"DELETE\",\n                          headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization:\n                              \"Bearer \" + localStorage.getItem(\"jwt\"),\n                          },\n                          body: JSON.stringify({\n                            consignmentid: shop._id,\n                          }),\n                        })\n                          .then((doc) => {\n                            if (doc.error) {\n                              alert(doc.error);\n                            } else {\n                              alert(\"Successfully Removed\");\n                              history.push(\"/infHome\");\n                            }\n                          })\n                          .catch((err) => {\n                            console.log(`inf consignment: ${err}`);\n                          });\n                      }}\n                    >\n                      Remove\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      </>\n      )}\n    </>\n  );\n}\n\nexport default Consignments;\n","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\resetInf.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\influencers\\SignUpInf.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\influencers\\newPasswordInf.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\shops\\SignUpShop.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\influencers\\CurrentConsignments.js",["226","227","228"],"import React, { useState, useEffect } from \"react\";\nimport InfluencerNavbar from \"./InfluencerNavbar\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction CurrentConsignments() {\n  const history = useHistory();\n  const [isempty, setIsempty] = useState(false);\n  const [shops, setShops] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      shopName: \"\",\n      address: \"\",\n      photo1: \"\",\n      photo2: \"\",\n    },\n  ]);\n  const [amount, setAmount] = useState([]);\n  const [startDate, setStartDate] = useState([]);\n  const [endDate, setEndDate] = useState([]);\n  useEffect((req, res) => {\n    fetch(\"/api/infCurrentconsignment\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signininf\");\n        }\n      })\n      .then((foundcons) => {\n        if (foundcons[0].length == 0) {\n          setIsempty(true);\n        }\n        setShops(foundcons[0]);\n        setAmount(foundcons[1]);\n        setStartDate(foundcons[2]);\n        setEndDate(foundcons[3]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <>\n      <InfluencerNavbar />\n\n      {isempty ? (\n        <>\n          <center>\n            <div className=\"fatext justify-content-center col-lg-7 text-center  md-3 mt-3\">\n              No deals are currently ongoing with any brand.\n            </div>\n          </center>\n        </>\n      ) : (\n        <>\n\n      <div className=\"container my-5\">\n        <div className=\"row\">\n          {shops.map((shop, index) => (\n            <div className=\"col-12 mt-3\" key={index}>\n              <div className=\"card col-sm-12\">\n                <div\n                  className=\"card-horizontal col-sm-12\"\n                  style={{ display: \"flex\", flex: \"1 1 auto\" }}\n                >\n                  <div className=\"img-square-wrapper\">\n                    <img\n                      className=\"img\"\n                      src={shop.photo1}\n                      style={{ height: \"35vh\", width: \"20rem\" }}\n                      alt=\"Card image cap\"\n                    />\n                  </div>\n                  <div className=\"card-body col-sm-12\">\n                    <h4 className=\"card-title\">{shop.shopName}</h4>\n                    <h6>Owner Name: {shop.name}</h6>\n                    <h6>Address: {shop.address}</h6>\n                    <h6>Contact No.: {shop.phone}</h6>\n                    <h6>Amount : {amount[index]}</h6>\n                    <h6>StartDate : {startDate[index]}</h6>\n                    <h6>EndDate : {endDate[index]}</h6>\n                    <h6>\n                      Payment Status: <b>Done</b>\n                    </h6>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      </>\n      )}\n    </>\n\n  );\n}\n\nexport default CurrentConsignments;\n","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\InfProfilelook.js",["229"],"import React, { useState, useEffect } from \"react\";\nimport InfluencerNavbar from \"./InfluencerNavbar\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nfunction InfProfilelook() {\n  const history = useHistory();\n  const [image, setImage] = useState(\"\");\n  const [url, setUrl] = useState(\"\");\n\n  useEffect(() => {\n    if (url) {\n      fetch(\"/api/infphoto\", {\n        method: \"put\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n        },\n        body: JSON.stringify({\n          photo: url,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.error) {\n            console.log(data.error);\n          } else {\n           toast.success(\"Photo uploaded successfully.\");\n           window.location.reload();\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [url]);\n\n  useEffect(() => {\n    fetch(\"/api/getinfphoto\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => res.json())\n      .then((datadetail) => {\n        if (datadetail.error) {\n          console.log(datadetail.error);\n        } else {\n          setdata(datadetail[0]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const postDetails = () => {\n    console.log(\"Method called\");\n    document.getElementById(\"buttn\").innerHTML = \"Uploading...\";\n    const data = new FormData();\n    data.append(\"file\", image);\n    data.append(\"upload_preset\", \"advera_img88\");\n    data.append(\"cloud_name\", \"dt0e6pziw\");\n    fetch(\"https://api.cloudinary.com/v1_1/dt0e6pziw/image/upload\", {\n      method: \"post\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        \n        setUrl(data.url);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const [data, setdata] = useState([\n    {\n      name: \"\",\n      instagramURL: \"\",\n      facebookURL: \"\",\n      twitterURL: \"\",\n      email: \"\",\n      photo: \"\",\n    },\n  ]);\n\n  return (\n    <>\n      <InfluencerNavbar />\n      <div className=\"container my-5\">\n        <div className=\"main-body\">\n          <div className=\"row gutters-sm\">\n            <div className=\"col-md-4 mb-3\"></div>\n            <div className=\"col-md-4 mb-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"d-flex flex-column align-items-center text-center\">\n                    <img\n                      src={data.photo}\n                      alt=\"Upload profile pic\"\n                      className=\"rounded-circle\"\n                      width=\"200\"\n                      height=\"200\"\n                    />\n                    <div className=\"mt-3\">\n                      <h4>{data.name}</h4>\n\n                      <p className=\"text-secondary mb-1\">Influencer</p>\n                      <p className=\"text-muted font-size-sm\">\n                        {data.city}, {data.state}, {data.country}\n                      </p>\n                      <button className=\"btn btn-primary btn-block\" disabled>\n                        Connect\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card mt-3\">\n                <div className=\"form-group\">\n                  <center>\n                    <label htmlFor=\"exampleFormControlFile1\">\n                      <b>Upload image</b>\n                    </label>\n                    <input\n                      type=\"file\"\n                      className=\"form-control-file\"\n                      id=\"exampleFormControlFile1\"\n                      onChange={(e) => {\n                        setImage(e.target.files[0]);\n                      }}\n                    />\n                    <button\n                      className=\"btn btn-primary mt-3\"\n                      id=\"buttn\"\n                      onClick={() => postDetails()}\n                    >\n                      Upload\n                    </button>\n                  </center>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default InfProfilelook;\n","C:\\MSWDSDP\\Client\\src\\Components\\shops\\Login.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\shops\\resetShop.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\influencers\\ShopDetail.js",["230","231"],"import React, { useState, useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport InfluencerNavbar from \"./InfluencerNavbar\";\nimport {\n  MDBCarousel,\n  MDBRow,\n  MDBCol,\n  MDBCarouselInner,\n  MDBCarouselItem,\n  MDBView,\n  MDBMask,\n  MDBContainer,\n} from \"mdbreact\";\nfunction ShopDetail() {\n  const location = useLocation();\n  const history = useHistory();\n  const [data, setdata] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      shopName: \"\",\n      address: \"\",\n      location: \"\",\n      photo1: \"\",\n      photo2: \"\",\n      _id: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    setdata(location.state.data[0]);\n    console.log(data);\n  }, [location]);\n\n  return (\n    <>\n      <InfluencerNavbar />\n      <div\n        style={{\n          backgroundColor: \"#ccf2ff\",\n          fontFamily: \"'Source Code Pro', 'monospace'\",\n        }}\n      >\n        <div\n          className=\"shop-name text-center bold\"\n          style={{\n            backgroundColor: \"#80dfff\",\n            height: \"70px\",\n            fontSize: \"2.5rem\",\n            padding: \"10px\",\n          }}\n        >\n          <h1>{data.shopName}</h1>\n        </div>\n\n        <MDBRow>\n          <MDBCol size=\"6\" className=\"px-5\">\n            <h3>Owner Name: </h3>\n            <h4>{data.name}</h4>\n            <br />\n            <br />\n            <h3>Address:</h3>\n            <h4>{data.address}</h4>\n\n            <br />\n            <br />\n            <h3>\n              Location:\n              <a href={data.location} rel=\"noreferrer\" target=\"_blank\">\n                <i className=\"fas fa-map-marker-alt\"></i>\n              </a>\n            </h3>\n            <br />\n            <button\n              className=\" btn bg-success text-white\"\n              onClick={(e) => {\n                e.preventDefault();\n\n                var ans = window.confirm(\"Want to Accept Request?\");\n                if (ans) {\n                  fetch(\"/api/updateConsignment\", {\n                    method: \"PUT\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n                    },\n                    body: JSON.stringify({ sid: data._id }),\n                  })\n                    .then((res) => res.json())\n                    .then((doc) => {\n                      if (doc.error) {\n                        alert(doc.error);\n                      } else {\n                        alert(\"Successfully Added\");\n                        history.push(\"/infHome\");\n\n                        //email sender\n                        fetch(\"/email/acceptReq\", {\n                          method: \"POST\",\n                          headers: {\n                            Accept: \"application/json\",\n                            \"Content-Type\": \"application/json\",\n                            Authorization:\n                              \"Bearer \" + localStorage.getItem(\"jwt\"),\n                          },\n                          body: JSON.stringify({\n                            email: data.email,\n                          }),\n                        })\n                          .then((res) => res.json())\n                          .then((res) => {\n                            console.log(\"here is the response: \", res);\n                          })\n                          .catch((err) => {\n                            console.error(\"here is the error: \", err);\n                          });\n                      }\n                    })\n                    .catch((err) => {\n                      console.log(`hello: ${err}`);\n                    });\n                }\n              }}\n            >\n              Accept\n            </button>\n            <button\n              className=\" btn bg-danger text-white\"\n              onClick={(e) => {\n                e.preventDefault();\n\n                var ans = window.confirm(\"Want to Reject Request?\");\n                if (ans) {\n                  fetch(\"/api/deleteConsignment\", {\n                    method: \"DELETE\",\n                    headers: {\n                      \"Content-Type\": \"application/json\",\n                      Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n                    },\n                    body: JSON.stringify({ sid: data._id }),\n                  })\n                    .then((doc) => {\n                      if (doc.error) {\n                        alert(doc.error);\n                      } else {\n                        alert(\"Successfully Removed\");\n                        history.push(\"/infHome\");\n\n                        //email sender\n                        fetch(\"/email/rejectReq\", {\n                          method: \"POST\",\n                          headers: {\n                            Accept: \"application/json\",\n                            \"Content-Type\": \"application/json\",\n                            Authorization:\n                              \"Bearer \" + localStorage.getItem(\"jwt\"),\n                          },\n                          body: JSON.stringify({\n                            email: data.email,\n                          }),\n                        })\n                          .then((res) => res.json())\n                          .then((res) => {\n                            console.log(\"here is the response: \", res);\n                          })\n                          .catch((err) => {\n                            console.error(\"here is the error: \", err);\n                          });\n                      }\n                    })\n                    .catch((err) => {\n                      console.log(`hello: ${err}`);\n                    });\n                }\n              }}\n            >\n              Reject\n            </button>\n          </MDBCol>\n          <MDBCol size=\"6\" className=\"px-5\">\n            <MDBContainer className=\"mt-2\">\n              <MDBCarousel\n                activeItem={1}\n                length={2}\n                showControls={true}\n                showIndicators={true}\n                className=\"z-depth-1\"\n              >\n                <MDBCarouselInner>\n                  <MDBCarouselItem itemId=\"1\">\n                    <MDBView>\n                      <img\n                        className=\"d-block w-100 \"\n                        src={data.photo1}\n                        alt=\"First slide\"\n                        style={{ height: \"50vh\" }}\n                      />\n                      <MDBMask overlay=\"black-light\" />\n                    </MDBView>\n                  </MDBCarouselItem>\n                  <MDBCarouselItem itemId=\"2\">\n                    <MDBView>\n                      <img\n                        className=\"d-block w-100 \"\n                        src={data.photo2}\n                        alt=\"Second slide\"\n                        style={{ height: \"50vh\" }}\n                      />\n                    </MDBView>\n                  </MDBCarouselItem>\n                </MDBCarouselInner>\n              </MDBCarousel>\n            </MDBContainer>\n          </MDBCol>\n        </MDBRow>\n      </div>\n    </>\n  );\n}\n\nexport default ShopDetail;\n","C:\\MSWDSDP\\Client\\src\\Components\\shops\\Shophome.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\shops\\InfDetail.js",["232"],"import React, { useState, useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport ShopNavbar from \"./ShopNavbar\";\nimport { useHistory } from \"react-router-dom\";\nfunction InfDetail() {\n  const location = useLocation();\n  const history = useHistory();\n  const [data, setdata] = useState([\n    {\n      name: \"\",\n      instagramURL: \"\",\n      facebookURL: \"\",\n      twitterURL: \"\",\n      email: \"\",\n      _id: \"\",\n      rating: \"\",\n      count: \"\",\n    },\n  ]);\n\n  const [reviews, setReviews] = useState([\n    {\n      review: \"\",\n      rating: \"\",\n    },\n  ]);\n\n  const [shopName, setShopName] = useState([]);\n\n  useEffect(() => {\n    setdata(location.state.data[0]);\n\n    fetch(\"/api/influencerReview\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ infid: location.state.data[0]._id }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then((jsonRes) => {\n        setShopName(jsonRes[0]);\n        setReviews(jsonRes[1]);\n      });\n  }, [location]);\n\n  return (\n    <>\n      <ShopNavbar />\n      <div className=\"container mt-5\">\n        <div className=\"main-body\">\n          <div className=\"row gutters-sm\">\n            <div className=\"col-md-4 mb-3\">\n              <div className=\"card\">\n                <div className=\"card-body\">\n                  <div className=\"d-flex flex-column align-items-center text-center\">\n                    <img\n                      src={data.photo}\n                      alt=\"Admin\"\n                      className=\"rounded-circle\"\n                      width=\"200rem\"\n                      height=\"200vh\"\n                    />\n                    <div className=\"mt-3\">\n                      <h4>{data.name}</h4>\n                      <p className=\"text-secondary mb-1\">Influencer</p>\n\n                      <div>\n                        <Rating\n                          name=\"read-only\"\n                          value={data.rating / data.count}\n                          precision={0.01}\n                          readOnly\n                        />\n                      </div>\n                      <p className=\"text-muted font-size-sm\">\n                        {data.city}, {data.state}, {data.country}\n                      </p>\n                      <button\n                        className=\"btn btn-primary btn-block\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          fetch(\"/api/sendrequest\", {\n                            method: \"post\",\n                            headers: {\n                              \"Content-Type\": \"application/json\",\n                              Authorization:\n                                \"Bearer \" + localStorage.getItem(\"jwt\"),\n                            },\n                            body: JSON.stringify({ influencerid: data._id }),\n                          })\n                            .then((res) => res.json())\n                            .then((data) => {\n                              if (data.error) {\n                                alert(data.error);\n                              } else {\n                                alert(\"Request has been sended\");\n                                // console.log(data);\n                                history.push(\"/Shophome\");\n                              }\n                            });\n                        }}\n                      >\n                        Connect\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"card mt-3\">\n                <ul className=\"list-group list-group-flush\">\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                    <h6 className=\"mb-0\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-twitter mr-2 icon-inline text-info\"\n                        href={data.instagramURL}\n                      >\n                        <path d=\"M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z\"></path>\n                      </svg>\n                      <a\n                        href={data.twitterURL}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        Twitter\n                      </a>\n                    </h6>\n                    <span className=\"text-secondary\">{data.twitter}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                    <h6 className=\"mb-0\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-instagram mr-2 icon-inline text-danger\"\n                      >\n                        <rect\n                          x=\"2\"\n                          y=\"2\"\n                          width=\"20\"\n                          height=\"20\"\n                          rx=\"5\"\n                          ry=\"5\"\n                        ></rect>\n                        <path d=\"M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z\"></path>\n                        <line x1=\"17.5\" y1=\"6.5\" x2=\"17.51\" y2=\"6.5\"></line>\n                      </svg>\n                      <a\n                        href={data.instagramURL}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        Instagram\n                      </a>\n                    </h6>\n                    <span className=\"text-secondary\">{data.instagram}</span>\n                  </li>\n                  <li className=\"list-group-item d-flex justify-content-between align-items-center flex-wrap\">\n                    <h6 className=\"mb-0\">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"2\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"feather feather-facebook mr-2 icon-inline text-primary\"\n                      >\n                        <path d=\"M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z\"></path>\n                      </svg>\n                      <a\n                        href={data.facebookURL}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                      >\n                        Facebook\n                      </a>\n                    </h6>\n                    <span className=\"text-secondary\">{data.facebook}</span>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"col-md-8\">\n              <div className=\"card mb-3\">\n                <div className=\"card-body\">\n                  {reviews.map((review, index) => (\n                    <div className=\"row\" key={index}>\n                      <div className=\"col-sm-5\">\n                        <h6 className=\"mb-0\">{shopName[index]}</h6>\n                        <Rating\n                          name=\"read-only\"\n                          value={review.rating}\n                          precision={0.5}\n                          readOnly\n                        />\n                      </div>\n                      <div className=\"col-sm-7 text-secondary\">\n                        {review.review}\n                      </div>\n\n                      <hr />\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default InfDetail;\n","C:\\MSWDSDP\\Client\\src\\Components\\shops\\newPasswordShop.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\influencers\\ConsignmentHistory.js",["233","234","235"],"import React, { useState, useEffect } from \"react\";\nimport InfluencerNavbar from \"./InfluencerNavbar\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction ConsignmentHistory() {\n  const history = useHistory();\n  const [isempty, setIsempty] = useState(false);\n  const [shops, setShops] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      shopName: \"\",\n      address: \"\",\n      photo1: \"\",\n      photo2: \"\",\n    },\n  ]);\n  const [amount, setAmount] = useState([]);\n  const [startDate, setStartDate] = useState([]);\n  const [endDate, setEndDate] = useState([]);\n  useEffect((req, res) => {\n    fetch(\"/api/infconsignmentHistory\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signininf\");\n        }\n      })\n      .then((foundcons) => {\n        if (foundcons[0].length == 0) {\n          setIsempty(true);\n        }\n        setShops(foundcons[0]);\n        setAmount(foundcons[1]);\n        setStartDate(foundcons[2]);\n        setEndDate(foundcons[3]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <>\n      <InfluencerNavbar />\n\n      {isempty ? (\n        <>\n          <center>\n            <div className=\"fatext justify-content-center col-lg-7 text-center  md-3 mt-3\">\n              No deals have been finished yet.\n            </div>\n          </center>\n        </>\n      ) : (\n        <>\n\n      <div className=\"container my-5\">\n        <div className=\"row\">\n          {shops.map((shop, index) => (\n            <div className=\"col-12 mt-3\" key={index}>\n              <div className=\"card col-sm-12\">\n                <div\n                  className=\"card-horizontal col-sm-12\"\n                  style={{ display: \"flex\", flex: \"1 1 auto\" }}\n                >\n                  <div className=\"img-square-wrapper\">\n                    <img\n                      className=\"img\"\n                      src={shop.photo1}\n                      style={{ height: \"35vh\", width: \"20rem\" }}\n                      alt=\"Card image cap\"\n                    />\n                  </div>\n                  <div className=\"card-body col-sm-12\">\n                    <h4 className=\"card-title\">{shop.shopName}</h4>\n                    <h6>Owner Name: {shop.name}</h6>\n                    <h6>Address: {shop.address}</h6>\n                    <h6>Contact No.: {shop.phone}</h6>\n                    <h6>Amount : {amount[index]}</h6>\n                    <h6>StartDate : {startDate[index]}</h6>\n                    <h6>EndDate : {endDate[index]}</h6>\n                    <h6>\n                      Payment Status: <b>Done</b>\n                    </h6>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      </>\n      )}\n    </>\n  );\n}\n\nexport default ConsignmentHistory;\n","C:\\MSWDSDP\\Client\\src\\Components\\shops\\ShopCurrentConsignments.js",["236","237","238","239"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ShopNavbar from \"./ShopNavbar\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport \"./shopconsignment.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Rating from \"@material-ui/lab/Rating\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 200,\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n});\n\nfunction ShopCurrentConsignments() {\n  const history = useHistory();\n\n  const [value, setValue] = React.useState(2);\n  const [hover, setHover] = React.useState(-1);\n  const [review, setReview] = useState(\"\");\n  const [btnShow, setBtnShow] = useState([]);\n  const [isempty, setIsempty] = useState(false);\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [infls, setInfls] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      photo: \"\",\n      _id: \"\",\n      valid: \"\",\n      age: \"\",\n      city: \"\",\n      state: \"\",\n    },\n  ]);\n  const [startDate, setStartDate] = useState([]);\n  const [endDate, setEndDate] = useState([]);\n\n  useEffect((req, res) => {\n    fetch(\"/api/shopCurrentConsignments\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signinshop\");\n        }\n      })\n      .then((foundcons) => {\n        if (foundcons[0].length == 0) {\n          setIsempty(true);\n        }\n        setInfls(foundcons[0]);\n        setBtnShow(foundcons[1]);\n        setStartDate(foundcons[2]);\n        setEndDate(foundcons[3]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <>\n      <ShopNavbar />\n      {isempty ? (\n        <>\n          <center>\n            <div className=\"fatext justify-content-center col-lg-7 text-center  md-3 mt-3\">\n              No Current Deals right now, Here you will see your Ongoing Deals.\n            </div>\n          </center>\n        </>\n      ) : (\n        <>\n          <div>\n            <div className=\"container my-3\">\n              <div className=\"row\">\n                {infls.map((Influencer, index) => (\n                  <div className=\"col-10 mt-3\" key={index}>\n                    <div className=\"card\">\n                      <div\n                        className=\"card-horizontal\"\n                        style={{\n                          display: \"flex\",\n                          flex: \"1 1 auto\",\n                          justifyContent: \"space-around\",\n                          margin: \"18px 18px\",\n                        }}\n                      >\n                        <div className=\"img-square-wrapper\">\n                          <img\n                            style={{\n                              width: \"200px\",\n                              height: \"200px\",\n                              borderRadius: \"100px\",\n                              position: \"relative\",\n                            }}\n                            src={Influencer.photo}\n                          />\n                        </div>\n                        <div\n                          className=\"card-body\"\n                          style={{ marginLeft: \"10px\" }}\n                        >\n                          <h4 className=\"card-title\">{Influencer.name}</h4>\n                          <h5>{Influencer.email}</h5>\n                          <h5>{Influencer.phone}</h5>\n                          <h5>Amount:{Influencer.valid}</h5>\n                          <h5>Start Date:{startDate[index]}</h5>\n                          <h5>End Date:{endDate[index]}</h5>\n\n                          <div id={index}>\n                            {btnShow[index] === \"false\" ? (\n                              <React.Fragment>\n                                <Button\n                                  variant=\"outlined\"\n                                  onClick={handleClickOpen}\n                                  className=\" btn btn-success\"\n                                >\n                                  Give Feedback\n                                </Button>\n                                <Dialog\n                                  open={open}\n                                  onClose={handleClose}\n                                  aria-labelledby=\"form-dialog-title\"\n                                >\n                                  <DialogTitle id=\"form-dialog-title\">\n                                    Feedback\n                                  </DialogTitle>\n\n                                  <DialogContent style={{ width: \"25rem\" }}>\n                                    <TextField\n                                      autoFocus\n                                      margin=\"dense\"\n                                      label=\"Your Review\"\n                                      type=\"text\"\n                                      fullWidth\n                                      value={review}\n                                      onChange={(e) =>\n                                        setReview(e.target.value)\n                                      }\n                                    />\n\n                                    <div className={classes.root}>\n                                      <Rating\n                                        name=\"hover-feedback\"\n                                        value={value}\n                                        precision={0.5}\n                                        onChange={(event, newValue) => {\n                                          setValue(newValue);\n                                        }}\n                                        onChangeActive={(event, newHover) => {\n                                          setHover(newHover);\n                                        }}\n                                      />\n                                    </div>\n                                  </DialogContent>\n                                  <DialogActions>\n                                    <Button\n                                      onClick={handleClose}\n                                      color=\"primary\"\n                                    >\n                                      Cancel\n                                    </Button>\n                                    <Button\n                                      color=\"primary\"\n                                      onClick={(e) => {\n                                        e.preventDefault();\n                                        setOpen(false);\n\n                                        var consid = Influencer._id;\n\n                                        fetch(\"/api/shopFeedback\", {\n                                          method: \"put\",\n                                          headers: {\n                                            \"Content-Type\": \"application/json\",\n                                          },\n                                          body: JSON.stringify({\n                                            consid,\n                                            review,\n                                            value,\n                                          }),\n                                        })\n                                          .then((res) => res.json())\n                                          .then((data) => {\n                                            if (data.error) {\n                                              console.log(data.error);\n                                            } else {\n                                              window.location.reload(false);\n                                              history.push(\n                                                \"/shopCurrentConsignments\"\n                                              );\n                                            }\n                                          })\n                                          .catch((err) => {\n                                            console.log(err);\n                                          });\n                                      }}\n                                    >\n                                      Submit\n                                    </Button>\n                                  </DialogActions>\n                                </Dialog>\n                              </React.Fragment>\n                            ) : (\n                              <React.Fragment>\n                                <h5>Rating:{Influencer.city}</h5>\n                                <h5>Review:{Influencer.age}</h5>\n                              </React.Fragment>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default ShopCurrentConsignments;\n","C:\\MSWDSDP\\Client\\src\\Components\\shops\\ShopPendingRequests.js",["240","241","242"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ShopNavbar from \"./ShopNavbar\";\nimport \"./shopconsignment.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nfunction ShopPendingRequests() {\n  const history = useHistory();\n  const [isempty, setIsempty] = useState(false);\n  const [infls, setInfls] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      photo: \"\",\n      _id:\"\"\n    },\n  ]);\n\n  useEffect((req, res) => {\n    fetch(\"/api/shopPendingRequests\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signinshop\");\n        }\n      })\n      .then((foundcons) => {\n        if (foundcons.length == 0) {\n          setIsempty(true);\n        }\n        setInfls(foundcons);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <>\n      <ShopNavbar />\n      {isempty ? (\n        <>\n          <center>\n            <div className=\"fatext justify-content-center col-lg-7 text-center  md-3 mt-3\">\n              No pending request to influencer ,pending requests will be shown\n              here.\n            </div>\n          </center>\n        </>\n      ) : (\n        <>\n          <div>\n            <div className=\"container my-3\">\n              <div className=\"row\">\n                {infls.map((Influencer, index) => (\n                  <div className=\"col-10 mt-3\" key={index}>\n                    <div className=\"card\">\n                      <div\n                        className=\"card-horizontal\"\n                        style={{\n                          display: \"flex\",\n                          flex: \"1 1 auto\",\n                          justifyContent: \"space-around\",\n                          margin: \"18px 18px\",\n                        }}\n                      >\n                        <div className=\"img-square-wrapper\">\n                          <img\n                            style={{\n                              width: \"200px\",\n                              height: \"200px\",\n                              borderRadius: \"100px\",\n                              position: \"relative\",\n                            }}\n                            src={Influencer.photo}\n                          />\n                        </div>\n                        <div\n                          className=\"card-body\"\n                          style={{ marginLeft: \"10px\" }}\n                        >\n                          <h4 className=\"card-title\">\n                            <b>{Influencer.name}</b>\n                          </h4>\n                          <p>\n                            When Influencer Accept or Reject Your request, we\n                            will inform you via mail!!\n                          </p>\n\n                          <p>Thank You!!</p>\n                          <button type=\"button\" \n                          class=\"btn btn-danger\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            fetch(\"/api/removeconnection\", {\n                              \n                              method: \"post\",\n                              headers: {\n                                Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n                                \"Content-Type\": \"application/json\",\n                              },\n                              body: JSON.stringify({ infid : Influencer._id }),\n                            })\n                              .then((res) => res.json())\n                              .then((data) => {\n                                if (data.error) {\n                                  toast.error(\"Somethig went wrong\");\n                                } else {\n                                  window.location.reload();\n                                }\n                              });\n                          }}\n                          >Remove</button>\n                        </div>\n                      </div>\n                      \n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default ShopPendingRequests;\n","C:\\MSWDSDP\\Client\\src\\Components\\shops\\payRazorpay.js",["243","244","245"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport ShopNavbar from \"./ShopNavbar\";\nimport Axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nconst PayRazorpay = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const [nconsid, setNconsid] = useState(\"\");\n  const [nAmount, setNAmount] = useState(\"\");\n  const [npaymentid, setNpaymentid] = useState(\"\");\n  const [isdateset, setIsdateset] = useState(false);\n  const [sdate, setSdate] = useState(\"\");\n  const [edate, setEdate] = useState(\"\");\n  useEffect(() => {\n    var d2 = { consid: nconsid, Amount: nAmount, paymentid: npaymentid };\n    if (isdateset) {\n      fetch(\"/api/consignmentdate\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          consid: d2.consid,\n          sdate,\n          edate,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {})\n        .catch((err) => console.log(err));\n    }\n  }, [isdateset]);\n\n  useEffect(() => {\n    setNAmount(location.state.data.Amount);\n    setNconsid(location.state.data.consid);\n    setNpaymentid(location.state.data.paymentid);\n  }, [location]);\n\n  async function razorPayPaymentHandler() {\n    var d1 = { consid: nconsid, Amount: nAmount, paymentid: npaymentid };\n    const API_URL = `http://localhost:9000/razorpay/`;\n    const orderUrl = `${API_URL}order`;\n    const response = await Axios.post(orderUrl, d1);\n    const { data } = response;\n\n    const options = {\n      key: \"\",\n      name: \"Advera\",\n      description: d1.consid,\n      order_id: data.id,\n      handler: async (response) => {\n        try {\n          const paymentId = response.razorpay_payment_id;\n          const url = `${API_URL}capture/${paymentId}`;\n          const captureResponse = await Axios.post(url, d1);\n          const successObj = JSON.parse(captureResponse.data);\n          const captured = successObj.captured;\n          if (captured) {\n            toast.success(\"Payment Successfull\");\n            toast.success(\"Goto Current consignment page for more detail\")\n           // history.push(\"/shopCurrentConsignments\");\n          } else {\n            toast.error(\"Payment Failed\");\n          }\n        } catch (err) {\n          console.log(err);\n        }\n      },\n      theme: {\n        color: \"#686CFD\",\n      },\n    };\n    const rzp1 = new window.Razorpay(options);\n    rzp1.open();\n\n    rzp1.on('payment.failed', function (response){\n      toast.error(\"Payment Failed\",{autoClose:7000});\n        });\n  }\n\n  return (\n    <>\n      <ShopNavbar />\n      <center>\n        <div\n          className=\"card m-5 p-4\"\n          style={{ width: \"20rem\", height: \"50vh\", position: \"relative\" }}\n        >\n          <span>\n            <label>Enter Amount:</label>\n            <input\n              type=\"number\"\n              min=\"0\"\n              value={nAmount}\n              onChange={(e) => {\n                setNAmount(e.target.value);\n              }}\n            ></input>\n          </span>\n          <br />\n          <div>\n            <label>Start Date:</label>\n            <br />\n            <input\n              type=\"date\"\n              id=\"startDate\"\n              value={sdate}\n              onChange={(e) => setSdate(e.target.value)}\n            ></input>\n          </div>\n          <br />\n          <div>\n            <label>End Date:</label>\n            <br />\n            <input\n              type=\"date\"\n              id=\"endDate\"\n              value={edate}\n              onChange={(e) => setEdate(e.target.value)}\n            ></input>\n          </div>\n          <br />\n\n          <button\n            type=\"button\"\n            className=\"btn btn-success\"\n            onClick={(e) => {\n              e.preventDefault();\n              if(nAmount<=0){\n                toast.error(\"Amount must be positive number.\",{autoClose:5000});\n                return;\n              }\n              if(edate>sdate){\n                setIsdateset(true);\n                razorPayPaymentHandler();\n              }\n              else{\n                toast.error(\"Input dates properly.\",{autoClose:5000});\n              }\n              \n              \n            }}\n          >\n            Make Payment\n          </button>\n        </div>\n        <div id=\"msg1\"></div>\n      </center>\n    </>\n  );\n};\n\nexport default PayRazorpay;\n","C:\\MSWDSDP\\Client\\src\\Components\\admin\\admin.js",["246","247"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AdminNavbar from \"./AdminNavbar\";\n\nfunction Admin() {\n  const history = useHistory();\n\n  const [countInf, setCountInf] = useState(\"\");\n  const [countShop, setCountShop] = useState(\"\");\n  useEffect(() => {\n    fetch(\"/api/countInf\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signinmanager\");\n        }\n      })\n      .then((count) => {\n        setCountInf(count);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"/api/countShop\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signinmanager\");\n        }\n      })\n      .then((count) => {\n        setCountShop(count);\n      });\n  }, []);\n\n  return (\n    <>\n      <AdminNavbar />\n\n      <center>\n        <div\n          className=\"row pl-2 mx-0 mt-5\"\n          style={{ backgroundColor: \"#f2f2f2\" }}\n        >\n          <div className=\"col-3\"></div>\n          <div>\n            <div className=\"card\" style={{ width: \"300px\",height:\"300px\", margin: \"10px\" }}>\n              <img\n                className=\"card-img-top\"\n                src=\"https://res.cloudinary.com/dt0e6pziw/image/upload/v1618064129/photo-1510557880182-3d4d3cba35a5_e61kcm.jpg\"\n                alt=\"Card cap\"\n                height=\"200px\"\n              />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">\n                  <b>Influencers</b>\n                </h5>\n                <h3>{countInf}</h3>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <div className=\"card\" style={{ width: \"300px\",height:\"300px\", margin: \"10px\" }}>\n              <img\n                className=\"card-img-top\"\n                src=\"https://res.cloudinary.com/dt0e6pziw/image/upload/ar_1:1,c_fill,g_auto,h_1300,q_100,w_1950/v1618064302/photo-1570857502809-08184874388e_qe7xli.jpg\"\n                alt=\"Card cap\"\n                height=\"100px\"\n              />\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">\n                  <b>Brands</b>\n                </h5>\n                <h3>{countShop}</h3>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </center>\n    </>\n  );\n}\n\nexport default Admin;\n","C:\\MSWDSDP\\Client\\src\\Components\\shops\\shopconsignments.js",["248","249","250"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ShopNavbar from \"./ShopNavbar\";\nimport \"./shopconsignment.css\";\n\nfunction Shopconsignments() {\n  const history = useHistory();\n  const [isempty, setIsempty] = useState(false);\n  const [infls, setInfls] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      photo: \"\",\n      _id: \"\",\n      valid: \"\",\n    },\n  ]);\n\n  useEffect((req, res) => {\n    fetch(\"/api/shopconsignment\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signinshop\");\n        }\n      })\n      .then((foundcons) => {\n        if (foundcons.length == 0) {\n          setIsempty(true);\n        }\n        setInfls(foundcons);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n  return (\n    <>\n      <ShopNavbar />\n\n      {isempty ? (\n        <>\n          <center>\n            <div className=\"fatext justify-content-center col-lg-7 text-center  md-3 mt-3\">\n              No Payments are due and No Ongoing deals.\n            </div>\n          </center>\n        </>\n      ) : (\n        <>\n          <div>\n            <div className=\"container my-3\">\n              <div className=\"row\">\n                {infls.map((Influencer, index) => (\n                  <div className=\"col-10 mt-3\" key={index}>\n                    <div className=\"card\">\n                      <div\n                        className=\"card-horizontal\"\n                        style={{\n                          display: \"flex\",\n                          flex: \"1 1 auto\",\n                          justifyContent: \"space-around\",\n                          margin: \"18px 18px\",\n                        }}\n                      >\n                        <div className=\"img-square-wrapper\">\n                          <img\n                            style={{\n                              width: \"200px\",\n                              height: \"200px\",\n                              borderRadius: \"100px\",\n                              position: \"relative\",\n                            }}\n                            src={Influencer.photo}\n                          />\n                        </div>\n                        <div\n                          className=\"card-body\"\n                          style={{ marginLeft: \"10px\" }}\n                        >\n                          <h4 className=\"card-title\">{Influencer.name}</h4>\n                          <h5>{Influencer.email}</h5>\n                          <h5>{Influencer.phone}</h5>\n\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-success\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              var data = {\n                                consid: \"\",\n                                Amount: 0,\n                                paymentid: \"0\",\n                              };\n                              data.consid = Influencer._id;\n\n                              history.push({\n                                pathname: \"/payRazorpay\",\n                                state: { data },\n                              });\n                            }}\n                          >\n                            Make a Payment\n                          </button>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-danger\"\n                            onClick={(e) => {\n                              e.preventDefault();\n                              fetch(\"/api/shopRemoveRequest\", {\n                                method: \"DELETE\",\n                                headers: {\n                                  \"Content-Type\": \"application/json\",\n                                  Authorization:\n                                    \"Bearer \" + localStorage.getItem(\"jwt\"),\n                                },\n                                body: JSON.stringify({\n                                  consignmentid: Influencer._id,\n                                }),\n                              })\n                                .then((doc) => {\n                                  if (doc.error) {\n                                    alert(doc.error);\n                                  } else {\n                                    alert(\"Successfully Removed\");\n                                    history.push(\"/shopHome\");\n                                  }\n                                })\n                                .catch((err) => {\n                                  console.log(`shop consignment: ${err}`);\n                                });\n                            }}\n                          >\n                            Remove\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default Shopconsignments;\n","C:\\MSWDSDP\\Client\\src\\Components\\shops\\ConsignmentHistory.js",["251","252","253"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ShopNavbar from \"./ShopNavbar\";\nimport \"./shopconsignment.css\";\n\nfunction ConsignmentHistory() {\n  const history = useHistory();\n\n  const [isempty, setIsempty] = useState(false);\n\n  const [infls, setInfls] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      photo: \"\",\n      _id: \"\",\n      valid: \"\",\n      age: \"\",\n      city: \"\",\n      state: \"\",\n    },\n  ]);\n  const [startDate, setStartDate] = useState([]);\n  const [endDate, setEndDate] = useState([]);\n\n  useEffect((req, res) => {\n    fetch(\"/api/shopConsignmentHistory\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signinshop\");\n        }\n      })\n      .then((foundcons) => {\n        if (foundcons[0].length == 0) {\n          setIsempty(true);\n        }\n        setInfls(foundcons[0]);\n        setStartDate(foundcons[1]);\n        setEndDate(foundcons[2]);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <>\n      <ShopNavbar />\n      {isempty ? (\n        <>\n          <center>\n            <div className=\"fatext justify-content-center col-lg-7 text-center  md-3 mt-3\">\n              After Your consignment is completed, your consignment history is\n              shown here.\n            </div>\n          </center>\n        </>\n      ) : (\n        <>\n          <div>\n            <div className=\"container my-3\">\n              <div className=\"row\">\n                {infls.map((Influencer, index) => (\n                  <div className=\"col-10 mt-3\" key={index}>\n                    <div className=\"card\">\n                      <div\n                        className=\"card-horizontal\"\n                        style={{\n                          display: \"flex\",\n                          flex: \"1 1 auto\",\n                          justifyContent: \"space-around\",\n                          margin: \"18px 18px\",\n                        }}\n                      >\n                        <div className=\"img-square-wrapper\">\n                          <img\n                            style={{\n                              width: \"200px\",\n                              height: \"200px\",\n                              borderRadius: \"100px\",\n                              position: \"relative\",\n                            }}\n                            src={Influencer.photo}\n                          />\n                        </div>\n                        <div\n                          className=\"card-body\"\n                          style={{ marginLeft: \"10px\" }}\n                        >\n                          <h4 className=\"card-title\">{Influencer.name}</h4>\n                          <h5>{Influencer.email}</h5>\n                          <h5>{Influencer.phone}</h5>\n                          <h5>Amount:{Influencer.valid}</h5>\n                          <h5>Start Date:{startDate[index]}</h5>\n                          <h5>End Date:{endDate[index]}</h5>\n                          <h5>Rating:{Influencer.city}</h5>\n                          <h5>Review:{Influencer.age}</h5>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default ConsignmentHistory;\n","C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\SiteManager.js",["254"],"import React, { useEffect, useState } from \"react\";\nimport { Instagram, Facebook, Twitter } from \"@material-ui/icons\";\nimport SiteManagerNavbar from \"./SiteManagerNavbar\";\nimport { useHistory } from \"react-router-dom\";\n\nconst SiteManager = () => {\n  const history = useHistory();\n  const [influencers, setInfluencers] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      age: \"\",\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      instagram: \"\",\n      instagramURL: \"\",\n      instagramFollowers: \"\",\n      instagramEngagementRate: \"\",\n      facebook: \"\",\n      facebookURL: \"\",\n      facebookFollowers: \"\",\n      facebookEngagementRate: \"\",\n      twitter: \"\",\n      twitterURL: \"\",\n      twitterFollowers: \"\",\n      twitterEngagementRate: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    fetch(\"/api/influencers\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signinmanager\");\n        }\n      })\n      .then((jsonRes) => setInfluencers(jsonRes));\n  }, []);\n\n  return (\n    <>\n      <SiteManagerNavbar />\n      <div className=\"container-fluid mt-5\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <td>\n                <b>Name</b>\n              </td>\n              <td className=\"text-center\">\n                <b>Email</b>\n              </td>\n              <td>\n                <b>Phone</b>\n              </td>\n              <td>\n                <b>Age</b>\n              </td>\n              <td>\n                <b>City</b>\n              </td>\n              <td>\n                <b>State</b>\n              </td>\n              <td>\n                <b>Country</b>\n              </td>\n\n              <td>\n                <b>Insta</b>\n              </td>\n              <td>\n                <b>Insta Followers</b>\n              </td>\n              <td>\n                <b>Insta Engagement Rate</b>\n              </td>\n\n              <td>\n                <b>Facebook</b>\n              </td>\n              <td>\n                <b>Facebook Followers</b>\n              </td>\n              <td>\n                <b>Facebook Engagement Rate</b>\n              </td>\n\n              <td>\n                <b>Twitter</b>\n              </td>\n              <td>\n                <b>Twitter Followers</b>\n              </td>\n              <td>\n                <b>Twitter Engagement Rate</b>\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#57D973\",\n                  fontSize: \"20px\",\n                }}\n                className=\"text-center\"\n              >\n                <b>ADD</b>\n              </td>\n              <td\n                style={{\n                  backgroundColor: \"#FC8781\",\n                  fontSize: \"20px\",\n                }}\n                className=\"text-center\"\n              >\n                <b>REMOVE</b>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {influencers.map((influencer, index) => (\n              <tr key={index}>\n                <td>{influencer.name}</td>\n                <td>{influencer.email}</td>\n                <td>{influencer.phone}</td>\n                <td>{influencer.age}</td>\n                <td>{influencer.city}</td>\n                <td>{influencer.state}</td>\n                <td>{influencer.country}</td>\n\n                <td>\n                  <a\n                    href={influencer.instagramURL}\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <Instagram />\n                  </a>\n                </td>\n                <td>{influencer.instagramFollowers}</td>\n                <td>{influencer.instagramEngagementRate}</td>\n\n                <td>\n                  <a\n                    href={influencer.facebookURL}\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <Facebook />\n                  </a>\n                </td>\n                <td>{influencer.facebookFollowers}</td>\n                <td>{influencer.facebookEngagementRate}</td>\n\n                <td>\n                  <a\n                    href={influencer.twitterURL}\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <Twitter />\n                  </a>\n                </td>\n                <td>{influencer.twitterFollowers}</td>\n                <td>{influencer.twitterEngagementRate}</td>\n                <td width=\"20%\">\n                  <button\n                    className=\"btn-block btn bg-success text-white\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      var ans = window.confirm(\"Want to add Influencer?\");\n                      if (ans) {\n                        fetch(\"/api/updateInf\", {\n                          method: \"PUT\",\n                          headers: {\n                            \"Content-Type\": \"application/json\",\n                          },\n                          body: JSON.stringify({ email: influencer.email }),\n                        })\n                          .then((res) => res.json())\n                          .then((data) => {\n                            if (data.error) {\n                              alert(data.error);\n                            } else {\n                              alert(\"Successfully Added\");\n\n                              window.location.reload();\n\n                              //email sender\n                              fetch(\"/email/add\", {\n                                method: \"POST\",\n                                headers: {\n                                  Accept: \"application/json\",\n                                  \"Content-Type\": \"application/json\",\n                                },\n                                body: JSON.stringify({\n                                  email: influencer.email,\n                                }),\n                              })\n                                .then((res) => res.json())\n                                .then((res) => {\n                                  console.log(\"here is the response: \", res);\n                                })\n                                .catch((err) => {\n                                  console.error(\"here is the error: \", err);\n                                });\n                            }\n                          })\n                          .catch((err) => {\n                            console.log(`hello: ${err}`);\n                          });\n                      }\n                    }}\n                  >\n                    Add\n                  </button>\n                </td>\n                <td width=\"20%\">\n                  <button\n                    className=\"btn-block btn bg-danger text-white\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      var ans = window.confirm(\"Want to remove Influencer?\");\n                      if (ans) {\n                        fetch(\"/api/deleteInf\", {\n                          method: \"DELETE\",\n                          headers: {\n                            \"Content-Type\": \"application/json\",\n                          },\n                          body: JSON.stringify({ email: influencer.email }),\n                        })\n                          .then((data) => {\n                            if (data.error) {\n                              alert(data.error);\n                            } else {\n                              alert(\"Successfully Removed\");\n\n                              window.location.reload();\n\n                              //email sender\n                              fetch(\"/email/remove\", {\n                                method: \"POST\",\n                                headers: {\n                                  Accept: \"application/json\",\n                                  \"Content-Type\": \"application/json\",\n                                },\n                                body: JSON.stringify({\n                                  email: influencer.email,\n                                }),\n                              })\n                                .then((res) => res.json())\n                                .then((res) => {\n                                  console.log(\"here is the response: \", res);\n                                })\n                                .catch((err) => {\n                                  console.error(\"here is the error: \", err);\n                                });\n                            }\n                          })\n                          .catch((err) => {\n                            console.log(`hello: ${err}`);\n                          });\n                      }\n                    }}\n                  >\n                    Remove\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\n\nexport default SiteManager;\n","C:\\MSWDSDP\\Client\\src\\Components\\admin\\addManager.js",["255"],"import React, { useState, useEffect } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n} from \"mdbreact\";\nimport { useHistory } from \"react-router-dom\";\nimport AdminNavbar from \"./AdminNavbar\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nfunction AddManager() {\n  const history = useHistory();\n  const [name, setname] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [phone, setphone] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"/api/adminverification\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signinmanager\");\n        }\n      })\n\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  const postdata = (e) => {\n    e.preventDefault();\n    fetch(\"/api/addManager\", {\n      Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        phone,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signinmanager\");\n        }\n      })\n      .then((data) => {\n        if (data.error) {\n          toast.error(data.error);\n        } else {\n          history.push(\"/deleteManager\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      <AdminNavbar />\n\n      <MDBContainer className=\"mt-5\">\n        <MDBRow>\n          <MDBCol md=\"2\" />\n          <MDBCol md=\"8\">\n            <MDBCard>\n              <MDBCardBody>\n                <form onSubmit={postdata}>\n                  <p className=\"h4 text-center py-4\">Add Manager</p>\n                  <div className=\"grey-text px-5\">\n                    <MDBCol md=\"10\" className=\"md-3\">\n                      <MDBInput\n                        label=\"name\"\n                        icon=\"user\"\n                        group\n                        type=\"text\"\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                        required\n                        name=\"name\"\n                        value={name}\n                        onChange={(e) => setname(e.target.value)}\n                      />\n                    </MDBCol>\n                    <MDBCol md=\"10\" className=\"md-3\">\n                      <MDBInput\n                        label=\"email\"\n                        icon=\"envelope\"\n                        group\n                        type=\"email\"\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                        required\n                        name=\"email\"\n                        value={email}\n                        onChange={(e) => setemail(e.target.value)}\n                      />\n                    </MDBCol>\n\n                    <MDBCol md=\"10\" className=\"md-3\">\n                      <MDBInput\n                        label=\"password\"\n                        icon=\"lock\"\n                        group\n                        type=\"password\"\n                        validate\n                        required\n                        name=\"password\"\n                        value={password}\n                        onChange={(e) => setpassword(e.target.value)}\n                      />\n                    </MDBCol>\n                    <MDBCol md=\"10\" className=\"md-3\">\n                      <MDBInput\n                        label=\"Phone Number\"\n                        icon=\"phone-alt\"\n                        group\n                        type=\"tel\"\n                        validate\n                        required\n                        name=\"phone\"\n                        value={phone}\n                        onChange={(e) => setphone(e.target.value)}\n                      />\n                    </MDBCol>\n                  </div>\n                  <div className=\"text-center py-4 mt-3\">\n                    <MDBBtn color=\"cyan\" type=\"submit\">\n                      Add\n                    </MDBBtn>\n                  </div>\n                </form>\n\n                <div className=\"msg\" id=\"msg\"></div>\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n          <MDBCol />\n        </MDBRow>\n      </MDBContainer>\n    </>\n  );\n}\n\nexport default AddManager;\n","C:\\MSWDSDP\\Client\\src\\Components\\admin\\deleteManager.js",["256"],"import React, { useEffect, useState } from \"react\";\nimport AdminNavbar from \"./AdminNavbar\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction DeleteManager() {\n  const history = useHistory();\n  const [manager, setManager] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      phone: \"\",\n    },\n  ]);\n\n  useEffect(() => {\n    fetch(\"/api/siteManagers\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signinmanager\");\n        }\n      })\n      .then((jsonRes) => setManager(jsonRes));\n  }, []);\n\n  return (\n    <>\n      <AdminNavbar />\n      <div className=\"container mt-5\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              {/* <th scope=\"col\">No.</th> */}\n              <td>\n                <b>Name</b>\n              </td>\n              <td>\n                <b>Mobile no.</b>\n              </td>\n              <td>\n                <b>Email</b>\n              </td>\n              <td></td>\n            </tr>\n          </thead>\n          <tbody>\n            {manager.map((manager, index) => (\n              <tr key={index}>\n                {/* <th scope=\"row\">1</th> */}\n                <td>{manager.name}</td>\n                <td>{manager.phone}</td>\n                <td>{manager.email}</td>\n                <td width=\"20%\">\n                  <button\n                    className=\"btn-block btn bg-danger text-white\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      var ans = window.confirm(\"are u sure? u want to delete?\");\n                      if (ans) {\n                        fetch(\"/api/deleteManager\", {\n                          method: \"DELETE\",\n                          headers: {\n                            \"Content-Type\": \"application/json\",\n                          },\n                          body: JSON.stringify({ email: manager.email }),\n                        })\n                          .then((data) => {\n                            if (data.error) {\n                              alert(data.error);\n                            } else {\n                              alert(\"Successfully Removed\");\n                              history.push(\"/admin\");\n                            }\n                          })\n                          .catch((err) => {\n                            console.log(`hello: ${err}`);\n                          });\n                      }\n                    }}\n                  >\n                    delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default DeleteManager;\n","C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\newPasswordManager.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\managersignin.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\resetManager.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\Transaction.js",["257","258","259","260","261","262","263","264"],"import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Badge from \"react-bootstrap/Badge\";\nimport SiteManagerNavbar from \"./SiteManagerNavbar\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function Transaction() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [shopemail, setShopemail] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [infemail, setInfemail] = useState(\"\");\n  const [total, setTotal] = useState(0);\n\n  const [counter, setCounter] = useState(1);\n\n  const [showPerPage, setShowPerPage] = useState(6);\n  const [pagination, setPagination] = useState({\n    start: 0,\n    end: showPerPage,\n  });\n\n  useEffect(() => {\n    const value = showPerPage * counter;\n    onPaginationChange(value - showPerPage, value);\n  }, [counter]);\n\n  const onPaginationChange = (start, end) => {\n    setPagination({ start: start, end: end });\n  };\n\n  const onButtonClick = (type) => {\n    if (type === \"prev\") {\n      if (counter === 1) {\n        setCounter(1);\n      } else {\n        setCounter(counter - 1);\n      }\n    } else if (type === \"next\") {\n      if (numberOfButtons === counter) {\n        setCounter(counter);\n      } else {\n        setCounter(counter + 1);\n      }\n    }\n  };\n\n  const [data, setData] = useState([\n    {\n      Amount: \"\",\n      paymentid: \"\",\n      paymentstatus: \"\",\n      date: \"\",\n      senderemail: \"\",\n      receiveremail: \"\",\n    },\n  ]);\n  const [pageNumber, setPageNumber] = useState(0);\n  const fetchdata = (e) => {\n    if (shopemail.trim() === \"\" && infemail.trim() === \"\") {\n      toast.error(\"Please Fill the fields.\");\n      return;\n    }\n\n    fetch(\"/api/transactionHistory\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n      },\n      body: JSON.stringify({\n        shopemail,\n        infemail,\n      }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        } else {\n          history.push(\"/signinmanager\");\n        }\n      })\n      .then((jsonRes) => {\n        setTotal(jsonRes.length);\n        \n        var erw = total / showPerPage;\n        if (erw > parseInt(erw)) {\n          setNumberOfButoons(parseInt(erw) + 1);\n        } else {\n          setNumberOfButoons(parseInt(erw));\n        }\n\n        setLoaded(true);\n        setData(jsonRes);\n\n        document.getElementById(\"msg\").innerHTML = \"\";\n      })\n      .catch((err) => console.log(err));\n  };\n  const [numberOfButtons, setNumberOfButoons] = useState(0);\n\n  return (\n    <>\n      <SiteManagerNavbar />\n      <br />\n\n      <center>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Brand email\"\n          variant=\"outlined\"\n          className=\"mt-3 ml-5\"\n          style={{ width: \"30rem\" }}\n          value={shopemail}\n          onChange={(e) => setShopemail(e.target.value)}\n        />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Influencer email\"\n          variant=\"outlined\"\n          className=\"mt-3 ml-5\"\n          style={{ width: \"30rem\" }}\n          value={infemail}\n          onChange={(e) => setInfemail(e.target.value)}\n        />\n        <span>\n          &nbsp;&nbsp;\n          <button className=\"btn btn-info mt-3\" onClick={(e) => fetchdata(e)}>\n            Search\n          </button>\n        </span>\n      </center>\n      <TableContainer component={Paper} className=\"mt-5\">\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Payment ID</StyledTableCell>\n              <StyledTableCell align=\"right\">Brand</StyledTableCell>\n              <StyledTableCell align=\"right\">Influencer</StyledTableCell>\n              <StyledTableCell align=\"right\">Amount&nbsp;(Rs.)</StyledTableCell>\n              <StyledTableCell align=\"right\">Date-Time</StyledTableCell>\n              <StyledTableCell align=\"right\">Payment Status</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          {loaded ? (\n            <>\n              <TableBody>\n                {data.slice(pagination.start, pagination.end).map((row) => (\n                  <StyledTableRow key={row.paymentid}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      {row.paymentid}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {row.senderemail}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {row.receiveremail}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {row.Amount}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"right\">{row.date}</StyledTableCell>\n                    <StyledTableCell align=\"right\">\n                      {row.paymentstatus ? (\n                        <h5>\n                          <Badge variant=\"success\">Success</Badge>{\" \"}\n                        </h5>\n                      ) : (\n                        <h5>\n                          <Badge variant=\"danger\">Failed</Badge>{\" \"}\n                        </h5>\n                      )}\n                    </StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            </>\n          ) : (\n            <></>\n          )}\n        </Table>\n      </TableContainer>\n\n      <div className=\"d-flex justify-content-center mt-4\">\n        <nav aria-label=\"Page navigation example\">\n          <ul className=\"pagination\">\n            <li className=\"page-item\">\n              <a\n                className=\"page-link\"\n                href=\"!#\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  onButtonClick(\"prev\");\n                }}\n              >\n                Previous\n              </a>\n            </li>\n            {/* {`page-item ${index + 1 === counter ? \"active\" : null}`} */}\n            {new Array(numberOfButtons).fill(\"\").map((el, index) => (\n              <li\n                className={`page-item ${\n                  index + 1 === counter ? \"active\" : null\n                }`}\n              >\n                <a\n                  className=\"page-link\"\n                  href=\"javascript:void(0)\"\n                  onClick={(e) => {\n                    e.preventDefault();\n                    setCounter(index + 1);\n                  }}\n                >\n                  {index + 1}\n                </a>\n              </li>\n            ))}\n            <li className=\"page-item\">\n              <a\n                className=\"page-link\"\n                href=\"javascript:void(0)\"\n                onClick={(e) => {\n                  e.preventDefault();\n                  onButtonClick(\"next\");\n                }}\n              >\n                Next\n              </a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n\n      <center>\n        <div className=\"msg\" id=\"msg\"></div>\n      </center>\n    </>\n  );\n}\n","C:\\MSWDSDP\\Client\\src\\Components\\NavbarPage.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\FooterPage.js",["265"],"import React from \"react\";\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\n\nconst FooterPage = () => {\n  return (\n    <MDBFooter className=\"font-small pt-4 mt-4\">\n      <div className=\"footer-copyright text-center py-3 \" style= {{backgroundColor: \"#f2f2f2\",color:\"black\"}}>\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyrights reserved by {\" \"}\n          <a href=\"\" style= {{backgroundColor: \"#f2f2f2\",color:\"black\"}}>K L University Students  </a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n};\n\nexport default FooterPage;\n","C:\\MSWDSDP\\Client\\src\\Components\\CarouselPage.js",["266","267","268"],"C:\\MSWDSDP\\Client\\src\\Components\\influencers\\Loginpageinf.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\influencers\\InfluencerNavbar.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\shops\\SignUpFormPageShop.js",["269","270","271"],"import React, { useState, useEffect } from \"react\";\nimport {\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBInput,\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n} from \"mdbreact\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nconst SignUpFormPageShop = () => {\n  const history = useHistory();\n  const [name, setname] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [email, setemail] = useState(\"\");\n  const [phone, setphone] = useState(\"\");\n  const [shopName, setshopName] = useState(\"\");\n  const [address, setaddress] = useState(\"\");\n  const [image1, setImage1] = useState(\"\");\n  const [url1, setUrl1] = useState(\"\");\n  const [image2, setImage2] = useState(\"\");\n  const [url2, setUrl2] = useState(\"\");\n  const [location, setlocation] = useState(\"\");\n\n  useEffect(\n    (req, res) => {\n      if (url1 != \"\" && url2 != \"\") {\n        submitdata();\n      }\n    },\n    [url1, url2]\n  );\n\n  const postdata = (e) => {\n    e.preventDefault();\n    toast.warning(\"Wait, Images Uploading\");\n    uploaddata1();\n    uploaddata2();\n  };\n\n  function uploaddata1() {\n    const data = new FormData();\n    data.append(\"file\", image1);\n    data.append(\"upload_preset\", \"advera_img88\");\n    data.append(\"cloud_name\", \"dt0e6pziw\");\n    fetch(\"https://api.cloudinary.com/v1_1/dt0e6pziw/image/upload\", {\n      method: \"post\",\n      body: data,\n    })\n    .then((res) => res.json())\n      .then((data) => { \n        setUrl1(data.url)\n      })\n      .catch((err) => console.log(err));\n  }\n  function uploaddata2() {\n    const data1 = new FormData();\n    data1.append(\"file\", image2);\n    data1.append(\"upload_preset\", \"advera_img88\");\n    data1.append(\"cloud_name\", \"dt0e6pziw\");\n    fetch(\"https://api.cloudinary.com/v1_1/dt0e6pziw/image/upload\", {\n      method: \"post\",\n      body: data1,\n    })\n    .then((res) => res.json())\n      .then((data) => {\n        setUrl2(data.url)\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function submitdata() {\n    \n    fetch(\"/api/sigupshop\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        phone,\n        shopName,\n        address,\n        photo1: url1,\n        photo2: url2,\n        location,\n      }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.error) {\n          toast.error(data.error);\n        } else {\n          toast.success(\"done\")\n          history.push(\"/signinShop\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  return (\n    <MDBContainer className=\"mt-5\">\n      <MDBRow>\n        <MDBCol />\n        <MDBCol md=\"8\">\n          <MDBCard>\n            <MDBCardBody>\n              <form onSubmit={postdata}>\n                <p className=\"h4 text-center py-4\">Sign up</p>\n                <div className=\"grey-text\">\n                  <MDBRow>\n                    <MDBCol md=\"6\" className=\"md-3\">\n                      <MDBInput\n                        label=\"Your name\"\n                        icon=\"user\"\n                        group\n                        type=\"text\"\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                        required\n                        autocomplete=\"off\"\n                        name=\"name\"\n                        value={name}\n                        onChange={(e) => setname(e.target.value)}\n                      />\n                    </MDBCol>\n                    <MDBCol md=\"6\" className=\"md-3\">\n                      <MDBInput\n                        label=\"Your email\"\n                        icon=\"envelope\"\n                        group\n                        type=\"email\"\n                        validate\n                        error=\"wrong\"\n                        success=\"right\"\n                        required\n                        autocomplete=\"off\"\n                        name=\"email\"\n                        value={email}\n                        onChange={(e) => setemail(e.target.value)}\n                      />\n                    </MDBCol>\n                  </MDBRow>\n                  <MDBRow>\n                    <MDBCol md=\"6\" className=\"md-3\">\n                      <MDBInput\n                        label=\"Your password\"\n                        icon=\"lock\"\n                        group\n                        type=\"password\"\n                        validate\n                        required\n                        name=\"password\"\n                        autocomplete=\"off\"\n                        value={password}\n                        onChange={(e) => setpassword(e.target.value)}\n                      />\n                    </MDBCol>\n                    <MDBCol md=\"6\" className=\"md-3\">\n                      <MDBInput\n                        label=\"Your Phone Number\"\n                        icon=\"phone-alt\"\n                        group\n                        type=\"tel\"\n                        validate\n                        required\n                        autocomplete=\"off\"\n                        name=\"phone\"\n                        value={phone}\n                        onChange={(e) => setphone(e.target.value)}\n                      />\n                    </MDBCol>\n                  </MDBRow>\n                  <MDBRow>\n                    <MDBCol md=\"6\" className=\"md-3\">\n                      <MDBInput\n                        label=\"Your Brand/Shop Name\"\n                        icon=\"shopping-cart\"\n                        group\n                        type=\"text\"\n                        validate\n                        required\n                        autocomplete=\"off\"\n                        name=\"shopName\"\n                        value={shopName}\n                        onChange={(e) => setshopName(e.target.value)}\n                      />\n                    </MDBCol>\n                    <MDBCol md=\"6\" className=\"md-3\">\n                      <MDBInput\n                        label=\"Your Brand/Shop Address\"\n                        icon=\"map-marker-alt\"\n                        group\n                        type=\"text\"\n                        validate\n                        required\n                        name=\"address\"\n                        autocomplete=\"off\"\n                        value={address}\n                        onChange={(e) => setaddress(e.target.value)}\n                      />\n                    </MDBCol>\n                  </MDBRow>\n                  <MDBRow>\n                    <MDBCol md=\"6\" className=\"md-3\">\n                      <label>Brand Image1</label>\n                      <input\n                        type=\"file\"\n                        required\n                        onChange={(e) => {\n                          setImage1(e.target.files[0]);\n                        }}\n                      />\n                    </MDBCol>\n                    <MDBCol md=\"6\" className=\"md-3\">\n                      <label>Brand Image2</label>\n                      <input\n                        type=\"file\"\n                        required\n                        onChange={(e) => {\n                          setImage2(e.target.files[0]);\n                        }}\n                      />\n                    </MDBCol>\n                  </MDBRow>\n                  <MDBRow>\n                    <MDBCol md=\"6\" className=\"md-3\">\n                      <MDBInput\n                        label=\"Location link\"\n                        icon=\"map-marker-alt\"\n                        group\n                        type=\"url\"\n                        validate\n                        required\n                        name=\"Location link\"\n                        value={location}\n                        onChange={(e) => setlocation(e.target.value)}\n                      />\n                    </MDBCol>\n                  </MDBRow>\n                </div>\n                <div className=\"text-center py-4 mt-3\">\n                  <MDBBtn color=\"cyan\" type=\"submit\">\n                    Register\n                  </MDBBtn>\n                </div>\n              </form>\n\n              <div\n                className=\"msg\"\n                id=\"msg\"\n                style={{\n                  textAlign: \"center\",\n                  flexDirection: \"column\",\n                  flex: \"auto\",\n                }}\n              ></div>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n        <MDBCol />\n      </MDBRow>\n    </MDBContainer>\n  );\n};\n\nexport default SignUpFormPageShop;\n","C:\\MSWDSDP\\Client\\src\\Components\\influencers\\SignUpFormPageInf.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\siteManager\\SiteManagerNavbar.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\admin\\AdminNavbar.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\shops\\ShopNavbar.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\shops\\LoginFormPage.js",[],"C:\\MSWDSDP\\Client\\src\\Components\\shops\\NSearch.js",["272","273","274","275","276","277","278","279"],"import React, { useEffect, useState, useRef, useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  MDBBtn,\n  MDBCard,\n  MDBCardBody,\n  MDBCardImage,\n  MDBCardTitle,\n  MDBRow,\n  MDBCol,\n  MDBView,\n  MDBIcon,\n  MDBCardText,\n} from \"mdbreact\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport $ from \"jquery\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nexport default function NSearch() {\n  const history = useHistory();\n  const [influencers, setInfluencers] = useState([\n    {\n      name: \"\",\n      email: \"\",\n      photo: \"\",\n      instagramURL: \"\",\n      facebookURL: \"\",\n      twitterURL: \"\",\n      instagramFollowers: \"\",\n      rating: \"\",\n      count: \"\",\n    },\n  ]);\n\n  const [userDetails, setUserDetails] = useState([]);\n  const [cityy, setCityy] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n  const [searchused, setSearchused] = useState(false);\n  const [searchvalue, setsearchvalue] = useState(\"\");\n\n  const observer = useRef();\n  const lastBookElementRef = useCallback(\n    (node) => {\n      if (loading) return;\n      if (observer.current) observer.current.disconnect();\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && hasMore) {\n          let pno = pageNumber + 1;\n\n          setPageNumber(pno);\n        }\n      });\n      if (node) observer.current.observe(node);\n    },\n    [loading, hasMore]\n  );\n\n  const SearchAll = () => {\n    setLoading(true);\n    setError(false);\n\n    fetch(\"/api/allInfluencersdynamic\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ pageNumber }),\n    })\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n      })\n      .then((res) => {\n        setInfluencers([...influencers, ...res]);\n        setHasMore(res.length > 0);\n        setLoading(false);\n      })\n      .catch((e) => {\n        setError(true);\n      });\n  };\n\n  useEffect(() => {\n    fetch(\"/api/search-all-city\", {\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => res.json())\n      .then((results) => {\n        var i,\n          len,\n          arr = [];\n        for (i = 0, len = results.length; i < len; i++) {\n          arr.push(results[i].city);\n        }\n        function removeDup(data) {\n          return data.filter((value, index) => data.indexOf(value) == index);\n        }\n        var dup = removeDup(arr);\n        setUserDetails(dup);\n      });\n  }, []);\n\n  const fetchUsers = (query) => {\n    setsearchvalue(query.toLowerCase());\n    if (query != \"\") {\n      var arr1 = [];\n      Array.from(userDetails).forEach(function (userDetail) {\n        if (userDetail.toLowerCase().indexOf(query.toLowerCase()) !== -1) {\n          arr1.push(userDetail);\n        }\n      });\n      setCityy(arr1);\n    }\n  };\n\n  const searchByCity = () => {\n    var val = document.getElementById(\"search-city\").value;\n    if(val===\"\"){\n      window.location.reload(false);\n    }\n    if (cityy.indexOf(searchvalue) === -1 && cityy.indexOf(val) === -1) {\n      toast.error(\"Please provide valid city name.\");\n      return;\n    } else if (val !== \"\") {\n      setHasMore(false);\n      fetch(\"/api/influencer-search-by-city\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ city: val }),\n      })\n        .then((res) => res.json())\n        .then((jsonRes) => {\n          setInfluencers(jsonRes);\n          val = -1;\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else if (searchvalue !== \"\") {\n      setHasMore(false);\n      fetch(\"/api/influencer-search-by-city\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ city: searchvalue }),\n      })\n        .then((res) => res.json())\n        .then((jsonRes) => {\n          setInfluencers(jsonRes);\n          document.getElementById(\"search-city\").value = searchvalue;\n          //setsearchvalue(-1);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n    // else {\n    //   window.location.reload();\n    //   setInfluencers([]);\n    //   setPageNumber(0);\n    // }\n  };\n\n  useEffect(() => {\n    if (!searchused) {\n      SearchAll();\n    }\n  }, [pageNumber]);\n\n  \n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-3\"></div>\n\n        <Autocomplete\n          id=\"search-city\"\n          options={cityy}\n          getOptionLabel={(option) => option}\n          style={{ width: \"50%\" }}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              label=\"search-by-city\"\n              variant=\"outlined\"\n              onChange={(e) => fetchUsers(e.target.value)}\n            />\n          )}\n        />\n        <span>\n          <button className=\"btn btn-info ml-3\" onClick={searchByCity}>\n            Search\n          </button>\n        </span>\n      </div>\n\n      <MDBRow className=\"px-0\" style={{ backgroundColor: \"#f2f2f2\" }}>\n        {influencers.map((influencer, index) => {\n          if (influencers.length === index + 1) {\n            return (\n              <>\n                <MDBCol md=\"3\" key={index} className=\"my-5\">\n                  <MDBCard wide cascade>\n                    <MDBView cascade>\n                      <MDBCardImage\n                        hover\n                        overlay=\"white-slight\"\n                        className=\"card-img-top\"\n                        height=\"300px\"\n                        width=\"250px\"\n                        src={influencer.photo}\n                        alt=\"Card cap\"\n                      />\n                    </MDBView>\n                    <div ref={lastBookElementRef} />\n                    <MDBCardBody cascade className=\"text-center\">\n                      <MDBCardTitle className=\"card-title\">\n                        <strong>{influencer.name}</strong>\n                      </MDBCardTitle>\n\n                      <MDBCol md=\"12\" className=\"d-flex justify-content-center\">\n                        <a\n                          href={influencer.instagramURL}\n                          className=\"px-2 fa-lg ig-ic\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          <MDBIcon fab icon=\"instagram\" />\n                        </a>\n\n                        <a\n                          href={influencer.facebookURL}\n                          className=\"px-2 fa-lg fb-ic\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          <MDBIcon fab icon=\"facebook-f\" />\n                        </a>\n\n                        <a\n                          href={influencer.twitterURL}\n                          className=\"px-2 fa-lg tw-ic\"\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          <MDBIcon fab icon=\"twitter\" />\n                        </a>\n                      </MDBCol>\n                      <MDBCardText className=\"my-2\">\n                        <div>\n                          <Rating\n                            name=\"read-only\"\n                            value={influencer.rating / influencer.count}\n                            precision={0.01}\n                            readOnly\n                          />\n                        </div>\n                        Instagram Followers : {influencer.instagramFollowers}\n                      </MDBCardText>\n                      <MDBBtn\n                        color=\"unique\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          fetch(\"/api/influencer\", {\n                            method: \"post\",\n                            headers: {\n                              \"Content-Type\": \"application/json\",\n                            },\n                            body: JSON.stringify({ email: influencer.email }),\n                          })\n                            .then((res) => res.json())\n                            .then((data) => {\n                              if (data.error) {\n                                alert(data.error);\n                              } else {\n                                history.push({\n                                  pathname: \"/infDetail\",\n                                  state: { data },\n                                });\n                              }\n                            });\n                        }}\n                      >\n                        View More\n                      </MDBBtn>\n                    </MDBCardBody>\n                  </MDBCard>\n                </MDBCol>\n              </>\n            );\n          } else {\n            if (index == 0) {\n            } else {\n              return (\n                <>\n                  <MDBCol md=\"3\" key={index} className=\"my-5\">\n                    <MDBCard wide cascade>\n                      <MDBView cascade>\n                        <MDBCardImage\n                          hover\n                          overlay=\"white-slight\"\n                          className=\"card-img-top\"\n                          height=\"300px\"\n                        width=\"250px\"\n                          src={influencer.photo}\n                          alt=\"Card cap\"\n                        />\n                      </MDBView>\n\n                      <MDBCardBody cascade className=\"text-center\">\n                        <MDBCardTitle className=\"card-title\">\n                          <strong>{influencer.name}</strong>\n                        </MDBCardTitle>\n\n                        <MDBCol\n                          md=\"12\"\n                          className=\"d-flex justify-content-center\"\n                        >\n                          <a\n                            href={influencer.instagramURL}\n                            className=\"px-2 fa-lg ig-ic\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                          >\n                            <MDBIcon fab icon=\"instagram\" />\n                          </a>\n\n                          <a\n                            href={influencer.facebookURL}\n                            className=\"px-2 fa-lg fb-ic\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                          >\n                            <MDBIcon fab icon=\"facebook-f\" />\n                          </a>\n\n                          <a\n                            href={influencer.twitterURL}\n                            className=\"px-2 fa-lg tw-ic\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                          >\n                            <MDBIcon fab icon=\"twitter\" />\n                          </a>\n                        </MDBCol>\n                        <MDBCardText className=\"my-2\">\n                          <div>\n                            <Rating\n                              name=\"read-only\"\n                              value={influencer.rating / influencer.count}\n                              precision={0.01}\n                              readOnly\n                            />\n                          </div>\n                          Instagram Followers : {influencer.instagramFollowers}\n                        </MDBCardText>\n                        <MDBBtn\n                          color=\"unique\"\n                          onClick={(e) => {\n                            e.preventDefault();\n                            fetch(\"/api/influencer\", {\n                              method: \"post\",\n                              headers: {\n                                \"Content-Type\": \"application/json\",\n                              },\n                              body: JSON.stringify({ email: influencer.email }),\n                            })\n                              .then((res) => res.json())\n                              .then((data) => {\n                                if (data.error) {\n                                  alert(data.error);\n                                } else {\n                                  history.push({\n                                    pathname: \"/infDetail\",\n                                    state: { data },\n                                  });\n                                }\n                              });\n                          }}\n                        >\n                          View More\n                        </MDBBtn>\n                      </MDBCardBody>\n                    </MDBCard>\n                  </MDBCol>\n                </>\n              );\n            }\n          }\n        })}\n      </MDBRow>\n      <div>{loading && \"Loading...\"}</div>\n      <div>{error && \"Error\"}</div>\n    </>\n  );\n}\n",{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":4,"column":8,"nodeType":"286","messageId":"287","endLine":4,"endColumn":20},{"ruleId":"284","severity":1,"message":"288","line":5,"column":8,"nodeType":"286","messageId":"287","endLine":5,"endColumn":19},{"ruleId":"284","severity":1,"message":"289","line":6,"column":8,"nodeType":"286","messageId":"287","endLine":6,"endColumn":20},{"ruleId":"284","severity":1,"message":"290","line":8,"column":11,"nodeType":"286","messageId":"287","endLine":8,"endColumn":18},{"ruleId":"284","severity":1,"message":"291","line":9,"column":11,"nodeType":"286","messageId":"287","endLine":9,"endColumn":19},{"ruleId":"292","severity":1,"message":"293","line":35,"column":28,"nodeType":"294","messageId":"295","endLine":35,"endColumn":30},{"ruleId":"296","severity":1,"message":"297","line":40,"column":6,"nodeType":"298","endLine":40,"endColumn":8,"suggestions":"299"},{"ruleId":"296","severity":1,"message":"297","line":60,"column":6,"nodeType":"298","endLine":60,"endColumn":8,"suggestions":"300"},{"ruleId":"292","severity":1,"message":"293","line":34,"column":33,"nodeType":"294","messageId":"295","endLine":34,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":43,"column":6,"nodeType":"298","endLine":43,"endColumn":8,"suggestions":"301"},{"ruleId":"302","severity":1,"message":"303","line":70,"column":21,"nodeType":"304","endLine":75,"endColumn":23},{"ruleId":"292","severity":1,"message":"293","line":36,"column":33,"nodeType":"294","messageId":"295","endLine":36,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":47,"column":6,"nodeType":"298","endLine":47,"endColumn":8,"suggestions":"305"},{"ruleId":"302","severity":1,"message":"303","line":74,"column":21,"nodeType":"304","endLine":79,"endColumn":23},{"ruleId":"284","severity":1,"message":"290","line":8,"column":9,"nodeType":"286","messageId":"287","endLine":8,"endColumn":16},{"ruleId":"284","severity":1,"message":"306","line":2,"column":23,"nodeType":"286","messageId":"287","endLine":2,"endColumn":27},{"ruleId":"296","severity":1,"message":"307","line":34,"column":6,"nodeType":"298","endLine":34,"endColumn":16,"suggestions":"308"},{"ruleId":"284","severity":1,"message":"306","line":2,"column":23,"nodeType":"286","messageId":"287","endLine":2,"endColumn":27},{"ruleId":"292","severity":1,"message":"293","line":36,"column":33,"nodeType":"294","messageId":"295","endLine":36,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":47,"column":6,"nodeType":"298","endLine":47,"endColumn":8,"suggestions":"309"},{"ruleId":"302","severity":1,"message":"303","line":74,"column":21,"nodeType":"304","endLine":79,"endColumn":23},{"ruleId":"284","severity":1,"message":"310","line":27,"column":10,"nodeType":"286","messageId":"287","endLine":27,"endColumn":15},{"ruleId":"292","severity":1,"message":"293","line":73,"column":33,"nodeType":"294","messageId":"295","endLine":73,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":84,"column":6,"nodeType":"298","endLine":84,"endColumn":8,"suggestions":"311"},{"ruleId":"312","severity":1,"message":"313","line":115,"column":27,"nodeType":"304","endLine":123,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":34,"column":30,"nodeType":"294","messageId":"295","endLine":34,"endColumn":32},{"ruleId":"296","severity":1,"message":"297","line":42,"column":6,"nodeType":"298","endLine":42,"endColumn":8,"suggestions":"314"},{"ruleId":"312","severity":1,"message":"313","line":73,"column":27,"nodeType":"304","endLine":81,"endColumn":29},{"ruleId":"284","severity":1,"message":"306","line":3,"column":23,"nodeType":"286","messageId":"287","endLine":3,"endColumn":27},{"ruleId":"284","severity":1,"message":"290","line":12,"column":9,"nodeType":"286","messageId":"287","endLine":12,"endColumn":16},{"ruleId":"296","severity":1,"message":"315","line":39,"column":6,"nodeType":"298","endLine":39,"endColumn":17,"suggestions":"316"},{"ruleId":"296","severity":1,"message":"297","line":26,"column":6,"nodeType":"298","endLine":26,"endColumn":8,"suggestions":"317"},{"ruleId":"296","severity":1,"message":"297","line":44,"column":6,"nodeType":"298","endLine":44,"endColumn":8,"suggestions":"318"},{"ruleId":"292","severity":1,"message":"293","line":34,"column":30,"nodeType":"294","messageId":"295","endLine":34,"endColumn":32},{"ruleId":"296","severity":1,"message":"297","line":42,"column":6,"nodeType":"298","endLine":42,"endColumn":8,"suggestions":"319"},{"ruleId":"312","severity":1,"message":"313","line":73,"column":27,"nodeType":"304","endLine":81,"endColumn":29},{"ruleId":"292","severity":1,"message":"293","line":41,"column":33,"nodeType":"294","messageId":"295","endLine":41,"endColumn":35},{"ruleId":"296","severity":1,"message":"297","line":51,"column":6,"nodeType":"298","endLine":51,"endColumn":8,"suggestions":"320"},{"ruleId":"312","severity":1,"message":"313","line":83,"column":27,"nodeType":"304","endLine":91,"endColumn":29},{"ruleId":"296","severity":1,"message":"297","line":46,"column":6,"nodeType":"298","endLine":46,"endColumn":8,"suggestions":"321"},{"ruleId":"296","severity":1,"message":"297","line":42,"column":6,"nodeType":"298","endLine":42,"endColumn":8,"suggestions":"322"},{"ruleId":"296","severity":1,"message":"297","line":30,"column":6,"nodeType":"298","endLine":30,"endColumn":8,"suggestions":"323"},{"ruleId":"284","severity":1,"message":"324","line":54,"column":23,"nodeType":"286","messageId":"287","endLine":54,"endColumn":37},{"ruleId":"296","severity":1,"message":"325","line":63,"column":6,"nodeType":"298","endLine":63,"endColumn":15,"suggestions":"326"},{"ruleId":"284","severity":1,"message":"327","line":95,"column":10,"nodeType":"286","messageId":"287","endLine":95,"endColumn":20},{"ruleId":"284","severity":1,"message":"328","line":95,"column":22,"nodeType":"286","messageId":"287","endLine":95,"endColumn":35},{"ruleId":"329","severity":1,"message":"330","line":243,"column":17,"nodeType":"304","endLine":250,"endColumn":18},{"ruleId":"331","severity":1,"message":"332","line":245,"column":24,"nodeType":"333","messageId":"334","endLine":245,"endColumn":44},{"ruleId":"329","severity":1,"message":"330","line":256,"column":15,"nodeType":"304","endLine":263,"endColumn":16},{"ruleId":"331","severity":1,"message":"332","line":258,"column":22,"nodeType":"333","messageId":"334","endLine":258,"endColumn":42},{"ruleId":"329","severity":1,"message":"330","line":10,"column":11,"nodeType":"304","endLine":10,"endColumn":74},{"ruleId":"335","severity":1,"message":"336","line":38,"column":17,"nodeType":"304","endLine":38,"endColumn":47},{"ruleId":"335","severity":1,"message":"336","line":51,"column":17,"nodeType":"304","endLine":51,"endColumn":47},{"ruleId":"335","severity":1,"message":"336","line":64,"column":17,"nodeType":"304","endLine":64,"endColumn":47},{"ruleId":"292","severity":1,"message":"337","line":33,"column":16,"nodeType":"294","messageId":"295","endLine":33,"endColumn":18},{"ruleId":"292","severity":1,"message":"337","line":33,"column":30,"nodeType":"294","messageId":"295","endLine":33,"endColumn":32},{"ruleId":"296","severity":1,"message":"338","line":37,"column":5,"nodeType":"298","endLine":37,"endColumn":17,"suggestions":"339"},{"ruleId":"284","severity":1,"message":"340","line":18,"column":8,"nodeType":"286","messageId":"287","endLine":18,"endColumn":9},{"ruleId":"284","severity":1,"message":"341","line":46,"column":22,"nodeType":"286","messageId":"287","endLine":46,"endColumn":35},{"ruleId":"296","severity":1,"message":"342","line":63,"column":5,"nodeType":"298","endLine":63,"endColumn":23,"suggestions":"343"},{"ruleId":"292","severity":1,"message":"293","line":108,"column":68,"nodeType":"294","messageId":"295","endLine":108,"endColumn":70},{"ruleId":"292","severity":1,"message":"337","line":117,"column":15,"nodeType":"294","messageId":"295","endLine":117,"endColumn":17},{"ruleId":"296","severity":1,"message":"344","line":183,"column":6,"nodeType":"298","endLine":183,"endColumn":18,"suggestions":"345"},{"ruleId":"346","severity":1,"message":"347","line":214,"column":46,"nodeType":"348","messageId":"349","endLine":214,"endColumn":48},{"ruleId":"292","severity":1,"message":"293","line":308,"column":23,"nodeType":"294","messageId":"295","endLine":308,"endColumn":25},"no-native-reassign",["350"],"no-negated-in-lhs",["351"],"no-unused-vars","'FacebookIcon' is defined but never used.","Identifier","unusedVar","'TwitterIcon' is defined but never used.","'LinkedInIcon' is defined but never used.","'history' is assigned a value but never used.","'location' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["352"],["353"],["354"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["355"],"'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.",["356"],["357"],"'hover' is assigned a value but never used.",["358"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["359"],"React Hook useEffect has missing dependencies: 'edate', 'nAmount', 'nconsid', 'npaymentid', and 'sdate'. Either include them or remove the dependency array.",["360"],["361"],["362"],["363"],["364"],["365"],["366"],["367"],"'setShowPerPage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showPerPage'. Either include it or remove the dependency array.",["368"],"'pageNumber' is assigned a value but never used.","'setPageNumber' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'submitdata'. Either include it or remove the dependency array.",["369"],"'$' is defined but never used.","'setSearchused' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'pageNumber'. Either include it or remove the dependency array.",["370"],"React Hook useEffect has missing dependencies: 'SearchAll' and 'searchused'. Either include them or remove the dependency array.",["371"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"372","fix":"374"},{"desc":"372","fix":"375"},{"desc":"372","fix":"376"},{"desc":"377","fix":"378"},{"desc":"372","fix":"379"},{"desc":"372","fix":"380"},{"desc":"372","fix":"381"},{"desc":"382","fix":"383"},{"desc":"372","fix":"384"},{"desc":"372","fix":"385"},{"desc":"372","fix":"386"},{"desc":"372","fix":"387"},{"desc":"372","fix":"388"},{"desc":"372","fix":"389"},{"desc":"372","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},"Update the dependencies array to be: [history]",{"range":"399","text":"400"},{"range":"401","text":"400"},{"range":"402","text":"400"},{"range":"403","text":"400"},"Update the dependencies array to be: [data, location]",{"range":"404","text":"405"},{"range":"406","text":"400"},{"range":"407","text":"400"},{"range":"408","text":"400"},"Update the dependencies array to be: [edate, isdateset, nAmount, nconsid, npaymentid, sdate]",{"range":"409","text":"410"},{"range":"411","text":"400"},{"range":"412","text":"400"},{"range":"413","text":"400"},{"range":"414","text":"400"},{"range":"415","text":"400"},{"range":"416","text":"400"},{"range":"417","text":"400"},"Update the dependencies array to be: [counter, showPerPage]",{"range":"418","text":"419"},"Update the dependencies array to be: [submitdata, url1, url2]",{"range":"420","text":"421"},"Update the dependencies array to be: [loading, hasMore, pageNumber]",{"range":"422","text":"423"},"Update the dependencies array to be: [SearchAll, pageNumber, searchused]",{"range":"424","text":"425"},[961,963],"[history]",[1324,1326],[1039,1041],[1219,1221],[719,729],"[data, location]",[1218,1220],[2151,2153],[1032,1034],[1189,1200],"[edate, isdateset, nAmount, nconsid, npaymentid, sdate]",[657,659],[1031,1033],[957,959],[1188,1190],[1143,1145],[963,965],[687,689],[1825,1834],"[counter, showPerPage]",[982,994],"[submitdata, url1, url2]",[1721,1739],"[loading, hasMore, pageNumber]",[4718,4730],"[SearchAll, pageNumber, searchused]"]